// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/assignHelper dojo/i18n!../../nls/smartMapping ../.. ../../../pointCloudRenderers ../../../core/lang ../../../core/numberUtils ../../../core/promiseUtils ./support/ageUtils ./support/utils ../support/utils ../symbology/color ../../support/AuthoringInfo ../../support/AuthoringInfoVisualVariable ../../support/utils ../../visualVariables/ColorVariable".split(" "),function(S,m,k,v,y,z,F,G,d,r,e,f,p,A,H,u,I){function J(a){if(!(a&&a.layer&&(a.field||a.valueExpression||
a.sqlExpression)))return d.reject(e.createError("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));if(a.valueExpression&&!a.sqlExpression&&!a.view)return d.reject(e.createError("color-visual-variable:missing-parameters","View is required when 'valueExpression' is specified"));var b=k({},a);a=[0,2,1,3];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType;if("mesh"!==a&&b.worldScale){if("polyline"===
a||"polygon"===a)return d.reject(e.createError("color-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));if(!b.view||"3d"!==b.view.type)return d.reject(e.createError("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,
a,"color-visual-variable:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function K(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));if(a.valueExpression&&!a.sqlExpression&&!a.view)return d.reject(e.createError("color-continuous-renderer:missing-parameters",
"View is required when 'valueExpression' is specified"));var b=k({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,2,1,3];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType,h=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if(h&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-continuous-renderer:not-supported",
"3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"color-continuous-renderer:invalid-parameters"))?
d.reject(a):b}):d.reject(e.createError("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function L(a){if(!a||!a.layer||!a.field&&!a.valueExpression)return d.reject(e.createError("color-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required"));if(a.valueExpression&&!a.view)return d.reject(e.createError("color-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified"));
var b=k({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"equal-interval";b.normalizationType=f.getNormalizationType(b);a=[0,2,1,3];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?null!=b.minValue&&null!=b.maxValue||null==b.minValue&&null==b.maxValue?c.load().then(function(){var a=c.geometryType,h=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=
b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if(h&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=
f.getFieldsList({field:b.field,normalizationField:b.normalizationField});return(a=e.verifyBasicFieldValidity(c,a,"color-class-breaks-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range")):d.reject(e.createError("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function M(a){a=k({},
a);delete a.basemap;delete a.colorScheme;delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.edgesType;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}function N(a){if(!a||!a.layer)return d.reject(e.createError("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));var b=k({},a);a=[4];var c=f.createLayerAdapter(b.layer,a);b.layer=c;b.density=b.density||25;b.size=b.size||"100%";return e.isValidPointSize(b.size)?
c?c.load().then(function(){return b}):d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function O(a){if(!(a&&a.layer&&a.field))return d.reject(e.createError("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));
var b=a.field.toLowerCase();if("intensity"!==b&&"elevation"!==b)return d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));var c=k({},a);a=[4];b=f.createLayerAdapter(c.layer,a);c.layer=b;c.density=c.density||25;c.size=c.size||"100%";return e.isValidPointSize(c.size)?b?b.load().then(function(){return c}):d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+
f.getLayerTypeLabels(a).join(", "))):d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function B(a){a=k({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.edgesType;a.worldScale=b;return a}function P(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))return d.reject(e.createError("color-age-renderer:missing-parameters",
"'layer', 'view', startTime', 'endTime' parameters are required"));var b=k({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,2,1,3];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType,h=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if(h&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-age-renderer:not-supported",
"3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}return(a=r.verifyDates(c,b.startTime,b.endTime,"color-age-renderer:invalid-parameters"))?d.reject(a):b.unit&&-1===r.supportedAgeUnits.indexOf(b.unit)?d.reject(e.createError("color-age-renderer:invalid-unit",
"Supported units are: "+r.supportedAgeUnits.join(", "))):b}):d.reject(e.createError("color-age-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function w(a,b){var c=a.colorScheme,e=a.basemap;if(c)c=p.cloneScheme(c);else{b=b||a.theme||"high-to-low";var d=p.getSchemes({theme:b,basemap:a.basemap,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view});d&&(e=d.basemapId,c=a.schemeId?p.getSchemeById({id:b+"/"+e+"/"+a.schemeId,geometryType:a.geometryType}):
d.primaryScheme)}return{scheme:c,basemapId:e}}function C(a,b,c){for(var e=(b-a)/(c-1),d=[a],g=1;g<=c-2;g++)d.push(a+g*e);d.push(b);return G.round(d,{strictBounds:!0})}function D(a,b,c,d){var h=d.field,g=d.layer.geometryType,l=d.defaultSymbolEnabled,n=p.cloneScheme(a.colorScheme);return{renderer:new y.ClassBreaksRenderer({classBreakInfos:[{minValue:-E,maxValue:E,symbol:e.createSymbol(g,{type:d.symbolType,color:n.noDataColor,size:e.getSymbolSizeFromScheme(n,g),outline:e.getSymbolOutlineFromScheme(n,
g),meshInfo:{colorMixMode:d.colorMixMode,edgesType:d.edgesType}})}],defaultLabel:l?v.other:null,defaultSymbol:l?e.createSymbol(g,{type:d.symbolType,color:n.noDataColor,size:e.getSymbolSizeFromScheme(n,g),outline:e.getSymbolOutlineFromScheme(n,g),meshInfo:{colorMixMode:d.colorMixMode,edgesType:d.edgesType}}):null,field:h,normalizationType:b,normalizationField:c,valueExpression:d.valueExpression,valueExpressionTitle:d.valueExpressionTitle,visualVariables:[a.visualVariable.clone()],authoringInfo:a.authoringInfo&&
a.authoringInfo.clone()}),visualVariable:a.visualVariable.clone(),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,colorScheme:p.cloneScheme(a.colorScheme),basemapId:a.basemapId}}function x(a){return J(a).then(function(a){var b=a.normalizationField,l=b?"field":void 0;return(a.statistics?d.resolve(a.statistics):e.getSummaryStatistics({layer:a.layer,field:a.field,valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:l,normalizationField:b,
minValue:a.minValue,maxValue:a.maxValue,view:a.view})).then(function(c){var g=a.layer,l=a.field,h=l&&"function"!==typeof l?g.getField(l):null,f=h&&"date"===h.type,g=w({basemap:a.basemap,theme:a.theme,geometryType:g.geometryType,colorScheme:a.colorScheme,worldScale:a.worldScale,view:a.view});if(h=g.scheme){var k=e.createColors(h.colors,5);if(5>k.length)c=d.reject(e.createError("color-visual-variable:insufficient-info","Color scheme does not have enough colors"));else{var q=e.getDefaultDataRange(c,
f,!0),t=-1<h.id.indexOf("seq-"),t=q?C(q[0],q[1],5):e.createStopValues(c,t),k=e.createColors(k,5),l=new I({field:l,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationField:b,stops:u.createColorStops({values:t,isDate:f,dateFormatOptions:f?u.timelineDateFormatOptions:null,colors:k,labelIndexes:[0,2,4]}),legendOptions:a.legendOptions}),f=new H({type:"color",minSliderValue:c.min,maxSliderValue:c.max,theme:h.theme}),f=new A({visualVariables:[f]});c=d.resolve({basemapId:g.basemapId,
visualVariable:l,statistics:c,defaultValuesUsed:!!q,colorScheme:p.cloneScheme(h),authoringInfo:f})}}else c=d.reject(e.createError("color-visual-variable:insufficient-info","Unable to find color scheme"));return c})})}function Q(a,b){a=a.colorsForClassBreaks;var c;if(a&&0<a.length&&(a.some(function(a){a.numClasses===b&&(c=a.colors);return!!c}),!c)){var d=a[a.length-1];a=b-d.numClasses;if(0<a){var h=d.colors[d.numClasses-1];c=d.colors.splice(0);for(d=1;d<=a;d++)c.push(h)}}c&&(c=e.createColors(c,c.length));
return c}function R(a,b){var c=a.defaultSymbolEnabled,l=a.layer.geometryType,h=w({basemap:a.basemap,geometryType:l,colorScheme:a.colorScheme,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}),g=h.scheme,f=b.result,n=f.classBreakInfos,k=a.classificationMethod,m="standard-deviation"===k,q=a.normalizationType;if(!g)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info","Unable to find color scheme"));var t=Q(g,n.length);if(!t||t.length!==n.length)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info",
"Color scheme does not have enough colors"));c=new y.ClassBreaksRenderer({classBreakInfos:n.map(function(b,c){return{minValue:b.minValue,maxValue:b.maxValue,symbol:e.createSymbol(l,{type:a.symbolType,color:t[c],size:e.getSymbolSizeFromScheme(g,l),outline:e.getSymbolOutlineFromScheme(g,l),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}}),label:b.label}}),defaultLabel:c?v.other:null,defaultSymbol:c?e.createSymbol(l,{type:a.symbolType,color:g.noDataColor,size:e.getSymbolSizeFromScheme(g,
l),outline:e.getSymbolOutlineFromScheme(g,l),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}}):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:q,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===q?f.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new A({type:"class-breaks-color",classificationMethod:k,standardDeviationInterval:a.standardDeviationInterval})});m||u.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,
classificationMethod:k,normalizationType:q,round:!0});return d.resolve({renderer:c,colorScheme:p.cloneScheme(g),classBreaksResult:f,defaultValuesUsed:b.defaultValuesUsed,basemapId:h.basemapId})}Object.defineProperty(m,"__esModule",{value:!0});var E=Math.pow(2,53)-1;m.createVisualVariable=x;m.createContinuousRenderer=function(a){return K(a).then(function(a){return x(B(a)).then(function(b){var c=a.normalizationField;return D(b,c?"field":void 0,c,a)})})};m.createClassBreaksRenderer=function(a){return L(a).then(function(a){return e.getClassBreaks(M(a)).then(function(b){return R(a,
b)})})};m.createPCTrueColorRenderer=function(a){return N(a).then(function(a){return{renderer:new z.PointCloudRGBRenderer({field:"RGB",pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size)})}})};m.createPCContinuousRenderer=function(a){return O(a).then(function(a){return(a.statistics?d.resolve(a.statistics):e.getSummaryStatistics({layer:a.layer,field:a.field})).then(function(b){var c=w({basemap:a.basemap,colorScheme:a.colorScheme,geometryType:a.layer.geometryType,schemeId:"elevation"===
a.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),h=c.scheme;if(h){var g=e.createColors(h.colors,5);if(5>g.length)b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors"));else{var f=e.getDefaultDataRange(b,!1,!0),k=f?C(f[0],f[1],5):e.createStopValues(b),g=u.createColorStops({values:k,isDate:!1,dateFormatOptions:null,colors:g,labelIndexes:[0,2,4]});b=d.resolve({stops:g,basemapId:c.basemapId,statistics:b,
defaultValuesUsed:!!f,colorScheme:p.cloneScheme(h)})}}else b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info","Unable to find color scheme"));return b}).then(function(b){return{renderer:new z.PointCloudStretchRenderer({field:a.field,pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size),stops:b.stops}),basemapId:b.basemapId,statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:b.colorScheme}})})};m.createAgeRenderer=function(a){return P(a).then(function(a){var b=
a.defaultSymbolEnabled,e=a.view,f=a.layer,g=a.startTime,m=a.endTime,n=a.symbolType,p=a.colorMixMode,u=a.edgesType;return(a.unit?d.resolve({unit:a.unit,statistics:null,valueExpression:null}):r.getSuggestedAgeUnit({view:e,layer:f,startTime:g,endTime:m})).then(function(c){var d=c.unit,e=c.statistics,h=c.valueExpression||r.getAgeExpressions({layer:f,startTime:g,endTime:m,unit:d}).valueExpression;c=F.substitute({unit:d,startTime:r.formatDate(g,d,f),endTime:r.formatDate(m,d,f)},v["ageInfo_"+d]);return x(B({layer:f,
basemap:a.basemap,valueExpression:h,symbolType:n,statistics:e,legendOptions:{title:c},colorScheme:a.colorScheme,theme:a.theme,view:a.view})).then(function(a){a=D(a,null,null,{layer:f,valueExpression:h,defaultSymbolEnabled:b,symbolType:n,colorMixMode:p,edgesType:u});return k({},a,{unit:d})})})})}});