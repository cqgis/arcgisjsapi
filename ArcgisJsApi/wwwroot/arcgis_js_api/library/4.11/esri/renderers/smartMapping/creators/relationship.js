// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/assignHelper dojo/i18n!../../nls/smartMapping ../../../core/lang ../../../core/promiseUtils ./type ./support/utils ../support/utils ../symbology/relationship ../../support/AuthoringInfo ../../../symbols/support/utils".split(" "),function(P,m,x,y,A,e,B,f,n,r,C,D){function E(a){if(!(a&&a.layer&&a.view&&a.field1&&a.field2))return e.reject(f.createError("relationship-renderer:missing-parameters","'layer', 'view', 'field1' and 'field2' parameters are required"));
var b=x({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"quantile";b.numClasses=b.numClasses||3;b.focus=b.focus||null;if(-1===F.indexOf(b.classificationMethod))return e.reject(f.createError("relationship-renderer:invalid-parameters","classification method "+b.classificationMethod+" is not supported"));if(2>b.numClasses||4<b.numClasses)return e.reject(f.createError("relationship-renderer:invalid-parameters",
"'numClasses' must be 2, 3 or 4"));if(a.focus&&-1===G.indexOf(a.focus))return e.reject(f.createError("relationship-renderer:invalid-parameters","'focus' must be 'HH', 'HL', 'LH', 'LL' or null"));a=[0,2,1,3];var c=n.createLayerAdapter(b.layer,a);return(b.layer=c)?c.load().then(function(){var a=c.geometryType,h=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace",b.edgesType=b.edgesType||"none";else{if(h&&("polyline"===a||"polygon"===a))return e.reject(f.createError("relationship-renderer:not-supported",
"3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return e.reject(f.createError("relationship-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}var a=b.field1,h=b.field2,g=[a.field,h.field];a.normalizationField&&g.push(a.normalizationField);h.normalizationField&&g.push(h.normalizationField);return(a=f.verifyBasicFieldValidity(c,
g,"relationship-renderer:invalid-parameters"))?e.reject(a):b}):e.reject(f.createError("relationship-renderer:invalid-parameters","'layer' must be one of these types: "+n.getLayerTypeLabels(a).join(", ")))}function H(a){if(!(a&&a.renderer&&a.numClasses))return e.reject(f.createError("update-relationship-renderer:missing-parameters","'renderer' and 'numClasses' parameters are required"));var b=a.field1,c=a.field2,d=a.renderer,h=a.numClasses,g=a.colors,k=Math.pow(h,2);return!b&&!c||b&&c&&b.field&&c.field?
b&&!b.classBreakInfos||c&&!c.classBreakInfos?e.reject(f.createError("update-relationship-renderer:missing-parameters","'field1.classBreakInfos' and 'field2.classBreakInfos' are required")):d.authoringInfo?d.uniqueValueInfos.length!==k?e.reject(f.createError("update-relationship-renderer:invalid-parameters","Renderer must have "+k+" unique value infos to support "+h+" classes")):g&&g.length!==k?e.reject(f.createError("update-relationship-renderer:invalid-parameters","The scheme must have "+k+" colors")):
e.resolve(a):e.reject(f.createError("update-relationship-renderer:missing-parameters","'renderer.authoringInfo' is required")):e.reject(f.createError("update-relationship-renderer:missing-parameters","'field1' and 'field2' parameters are required"))}function I(a){var b=a.relationshipScheme,c=a.basemap;b?b=r.cloneScheme(b):(b=(a=r.getSchemes({basemap:a.basemap,geometryType:a.geometryType,theme:a.theme,worldScale:a.worldScale,view:a.view}))&&a.primaryScheme,c=a&&a.basemapId);return{scheme:b,basemapId:c}}
function t(a,b){a=A.clone(J[a]);return r.flatten2DArray(a,b)}function K(a,b){return t(a,b).map(function(a){return{value:a,count:0}})}function z(a,b,c,d){var h=a.field;a=a.normalizationField;var g=b.field;b=b.normalizationField;c=c.map(function(a){return[a.minValue,a.maxValue]});d=d.map(function(a){return[a.minValue,a.maxValue]});var k=L[c.length];return"\n  var field1 \x3d $feature['"+h+"'];\n  var field2 \x3d $feature['"+g+"'];\n  var hasNormField1 \x3d "+(a?"true":"false")+";\n  var hasNormField2 \x3d "+
(b?"true":"false")+";\n  var normField1 \x3d "+(a?"$feature['"+a+"']":"null")+";\n  var normField2 \x3d "+(b?"$feature['"+b+"']":"null")+";\n\n  if (\n    IsEmpty(field1) ||\n    IsEmpty(field2) ||\n    (hasNormField1 \x26\x26 (IsEmpty(normField1) || normField1 \x3d\x3d 0)) ||\n    (hasNormField2 \x26\x26 (IsEmpty(normField2) || normField2 \x3d\x3d 0))\n  ) {\n    return null;\n  }\n\n  var value1 \x3d IIf(hasNormField1, (field1 / normField1), field1);\n  var value2 \x3d IIf(hasNormField2, (field2 / normField2), field2);\n\n  var breaks1 \x3d "+
JSON.stringify(c)+";\n  var breaks2 \x3d "+JSON.stringify(d)+";\n  var classCodes \x3d "+JSON.stringify(k)+";\n\n  function getClassCode(value, breaks) {\n    var code \x3d null;\n\n    for (var i in breaks) {\n      var info \x3d breaks[i];\n      if (value \x3e\x3d info[0] \x26\x26 value \x3c\x3d info[1]) {\n        code \x3d classCodes[i];\n        break;\n      }\n    }\n\n    return code;\n  }\n\n  var code1 \x3d getClassCode(value1, breaks1);\n  var code2 \x3d getClassCode(value2, breaks2);\n\n  var classValue \x3d IIf(IsEmpty(code1) || IsEmpty(code2), null, code1 + code2);\n  return classValue;\n  "}
function M(a,b,c){var d=a.basemap,h=a.classificationMethod,g=a.field1,k=a.field2,l=a.focus,p=a.numClasses,q=a.layer,u=b.classBreakInfos,m=c.classBreakInfos;if(p!==u.length||u.length!==m.length)return e.reject(f.createError("relationship-renderer:error","incompatible class breaks"));var n=K(p,l),t=z(a.field1,a.field2,u,m),w=I({basemap:d,geometryType:q.geometryType,theme:"default",relationshipScheme:a.relationshipScheme,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}).scheme;return B.createRenderer({layer:q,
basemap:d,valueExpression:t,valueExpressionTitle:y.relationship.legendTitle,numTypes:-1,sortEnabled:!1,defaultSymbolEnabled:a.defaultSymbolEnabled,typeScheme:x({colors:r.getColors(w,p,l)},w),statistics:{uniqueValueInfos:n},legendOptions:a.legendOptions,symbolType:a.symbolType,colorMixMode:a.colorMixMode,edgesType:a.edgesType,view:a.view}).then(function(a){for(var d=a.renderer,f=y.relationship,e=0,q=d.uniqueValueInfos;e<q.length;e++){var n=q[e];n.label=f[n.value]}f=new C({type:"relationship",classificationMethod:h,
numClasses:p,focus:l,field1:{field:g.field,normalizationField:g.normalizationField,classBreakInfos:u.map(v)},field2:{field:k.field,normalizationField:k.normalizationField,classBreakInfos:m.map(v)}});d.authoringInfo=f;return{renderer:d,classBreaks:{field1:b,field2:c},uniqueValueInfos:a.uniqueValueInfos,relationshipScheme:w,basemapId:a.basemapId}})}function N(a,b,c){var d=t(b,c);a.sort(function(a,b){a=d.indexOf(a.value);b=d.indexOf(b.value);var c=0;a<b?c=-1:a>b&&(c=1);return c})}function O(a,b){var c=
a.authoringInfo;c.numClasses=b.numClasses;c.focus=b.focus||null;c.focus||delete c.focus;var d=b.field1;b=b.field2;c.field1={field:d.field,normalizationField:d.normalizationField,classBreakInfos:d.classBreakInfos.map(v)};c.field2={field:b.field,normalizationField:b.normalizationField,classBreakInfos:b.classBreakInfos.map(v)};a.authoringInfo=c}Object.defineProperty(m,"__esModule",{value:!0});var F=["equal-interval","natural-breaks","quantile"],G=["HH","HL","LH","LL"],J={2:[["HL","HH"],["LL","LH"]],
3:[["HL","HM","HH"],["ML","MM","MH"],["LL","LM","LH"]],4:[["HL","HM1","HM2","HH"],["M2L","M2M1","M2M2","M2H"],["M1L","M1M1","M1M2","M1H"],["LL","LM1","LM2","LH"]]},L={2:["L","H"],3:["L","M","H"],4:["L","M1","M2","H"]},v=function(a){return{minValue:a.minValue,maxValue:a.maxValue}};m.updateRenderer=function(a){return H(a).then(function(a){var b=a.field1,d=a.field2,e=a.numClasses,g=a.focus,k=a.colors,l=a.renderer.clone();l.valueExpression=z(b,d,b.classBreakInfos,d.classBreakInfos);N(l.uniqueValueInfos,
e,g);if(k){var p=f.createColors(k,k.length);l.uniqueValueInfos.forEach(function(a,b){return D.applyColorToSymbol(a.symbol,p[b])})}O(l,a);return l})};m.createRenderer=function(a){return E(a).then(function(a){var b=a.layer,d=a.classificationMethod,h=a.field1,g=a.field2,k=a.numClasses,l=a.view,b=[f.getClassBreaks({layer:b,classificationMethod:d,field:h.field,normalizationField:h.normalizationField,normalizationType:h.normalizationField?"field":null,minValue:h.minValue,maxValue:h.maxValue,analyzeData:!(null!=
h.minValue&&null!=h.maxValue),numClasses:k,view:l}),f.getClassBreaks({layer:b,classificationMethod:d,field:g.field,normalizationField:g.normalizationField,normalizationType:g.normalizationField?"field":null,minValue:g.minValue,maxValue:g.maxValue,analyzeData:!(null!=g.minValue&&null!=g.maxValue),numClasses:k,view:l})];return e.all(b).then(function(b){var c=b[0];b=b[1];return c&&b?M(a,c.result,b.result):e.reject(f.createError("relationship-renderer:error","error when calculating class breaks"))})})}});