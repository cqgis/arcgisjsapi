// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/assignHelper dojo/i18n!../../nls/smartMapping ../.. ../../../core/lang ../../../core/promiseUtils ../../../core/screenUtils ./support/ageUtils ./support/utils ../support/utils ../symbology/size ../../support/AuthoringInfo ../../support/AuthoringInfoVisualVariable ../../support/utils ../../visualVariables/SizeVariable".split(" "),function(T,u,m,x,A,J,d,B,n,c,g,w,C,K,L,D){function M(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(c.createError("size-visual-variable:missing-parameters",
"'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));if(a.valueExpression&&!a.sqlExpression&&!a.view)return d.reject(c.createError("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified"));var b=m({},a);a=[0,2,1,3];var f=g.createLayerAdapter(b.layer,a);return(b.layer=f)?f.load().then(function(){var a=f.geometryType;if("mesh"===a)return d.reject(c.createError("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));
if(b.worldScale){if("polyline"===a||"polygon"===a)return d.reject(c.createError("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));if(!b.view||"3d"!==b.view.type)return d.reject(c.createError("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=g.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=
c.verifyBasicFieldValidity(f,a,"size-visual-variable:invalid-parameters"))?d.reject(a):b}):d.reject(c.createError("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(a).join(", ")))}function N(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(c.createError("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));if(a.valueExpression&&!a.sqlExpression&&
!a.view)return d.reject(c.createError("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified"));var b=m({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,2,1,3];var f=g.createLayerAdapter(b.layer,a);return(b.layer=f)?f.load().then(function(){var a=f.geometryType,e=-1<b.symbolType.indexOf("3d");if("mesh"===a)return d.reject(c.createError("size-continuous-renderer:invalid-parameters",
"Size visualization is not applicable to layers with 'mesh' geometry type"));if(e&&("polyline"===a||"polygon"===a))return d.reject(c.createError("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(c.createError("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform"));
a=g.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=c.verifyBasicFieldValidity(f,a,"size-continuous-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(c.createError("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(a).join(", ")))}function O(a){if(!a||!a.layer||!a.field&&!a.valueExpression)return d.reject(c.createError("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required"));
if(a.valueExpression&&!a.view)return d.reject(c.createError("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified"));var b=m({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"equal-interval";b.normalizationType=g.getNormalizationType(b);a=[0,2,1,3];var f=g.createLayerAdapter(b.layer,a);return(b.layer=f)?null!=b.minValue&&null!=b.maxValue||
null==b.minValue&&null==b.maxValue?f.load().then(function(){var a=f.geometryType,e=-1<b.symbolType.indexOf("3d");if("mesh"===a)return d.reject(c.createError("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));if(e&&("polyline"===a||"polygon"===a))return d.reject(c.createError("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&
(!b.view||"3d"!==b.view.type))return d.reject(c.createError("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform"));a=g.getFieldsList({field:b.field,normalizationField:b.normalizationField});return(a=c.verifyBasicFieldValidity(f,a,"size-class-breaks-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(c.createError("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range")):
d.reject(c.createError("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(a).join(", ")))}function P(a){a=m({},a);delete a.basemap;delete a.sizeScheme;delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;a.analyzeData=!(null!=a.minValue&&null!=a.maxValue);return a}function E(a){a=m({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");if(a.worldScale=b)a.axis="3d-volumetric-uniform"===a.symbolType?"all":"height";delete a.symbolType;
delete a.defaultSymbolEnabled;return a}function Q(a){if(!(a&&a.layer&&a.view&&a.startTime&&a.endTime))return d.reject(c.createError("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required"));var b=m({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,2,1,3];var f=g.createLayerAdapter(b.layer,a);return(b.layer=f)?f.load().then(function(){var a=f.geometryType,e=-1<b.symbolType.indexOf("3d");
return"mesh"===a?d.reject(c.createError("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type")):!e||"polyline"!==a&&"polygon"!==a?-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type)?d.reject(c.createError("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform")):(a=n.verifyDates(f,b.startTime,b.endTime,"size-age-renderer:invalid-parameters"))?
d.reject(a):b.unit&&-1===n.supportedAgeUnits.indexOf(b.unit)?d.reject(c.createError("size-age-renderer:invalid-unit","Supported units are: "+n.supportedAgeUnits.join(", "))):b:d.reject(c.createError("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"))}):d.reject(c.createError("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+g.getLayerTypeLabels(a).join(", ")))}function F(a){var b=a.sizeScheme,c=a.basemap;b?b=w.cloneScheme(b):
(b=(a=w.getSchemes({basemap:a.basemap,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view}))&&a.primaryScheme,c=a&&a.basemapId);return{scheme:b,basemapId:c}}function G(a,b){var c;switch(b){case "point":case "multipoint":c=[a.minSize,a.maxSize];break;case "polyline":c=[a.minWidth,a.maxWidth];break;case "polygon":c=[a.marker.minSize,a.marker.maxSize]}return c}function H(a,b,f,d){var e=d.field,v=d.layer.geometryType,q=d.defaultSymbolEnabled,h=w.cloneScheme(a.sizeScheme),k="polygon"===v,l=
k?h.marker:h,h=k?h.background:null,k=k?"point":v;return{renderer:new A.ClassBreaksRenderer({backgroundFillSymbol:h&&c.createSymbol(v,{type:d.symbolType,color:h.color,outline:c.getSymbolOutlineFromScheme(h,v)}),classBreakInfos:[{minValue:-I,maxValue:I,symbol:c.createSymbol(k,{type:d.symbolType,color:l.color,size:c.getSymbolSizeFromScheme(l,k),outline:c.getSymbolOutlineFromScheme(l,k)})}],defaultLabel:q?x.other:null,defaultSymbol:q?c.createSymbol(k,{type:d.symbolType,color:l.noDataColor,size:c.getSymbolSizeFromScheme(l,
k,!0),outline:c.getSymbolOutlineFromScheme(l,k)}):null,field:e,normalizationField:f,normalizationType:b,valueExpression:d.valueExpression,valueExpressionTitle:d.valueExpressionTitle,visualVariables:a.visualVariables.map(function(a){return a.clone()}),authoringInfo:a.authoringInfo&&a.authoringInfo.clone()}),visualVariables:a.visualVariables.map(function(a){return a.clone()}),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,sizeScheme:w.cloneScheme(a.sizeScheme),basemapId:a.basemapId}}
function R(a,b){var c=B.toPt(a.minSize);a=(B.toPt(a.maxSize)-c)/(4<=b?b-1:b);for(var d=[],e=0;e<b;e++)d.push(c+a*e);return d}function S(a,b){var f=a.defaultSymbolEnabled,g=a.layer.geometryType,e="polygon"===g,v=-1<a.symbolType.indexOf("3d-volumetric"),q=F({basemap:a.basemap,geometryType:g,sizeScheme:a.sizeScheme,worldScale:v,view:a.view}),h=q.scheme,k=b.result,l=k.classBreakInfos,p=a.classificationMethod,y=a.normalizationType,r=e?h.marker:h,m=e?h.background:null,t=e?"point":g,e=G(r,t),n=c.getSizeRangeForAxis({minSize:e[0],
maxSize:e[1]},"height"),u=R({minSize:e[0],maxSize:v?n.maxSize:e[1]},l.length),f=new A.ClassBreaksRenderer({backgroundFillSymbol:m&&c.createSymbol(g,{type:a.symbolType,color:m.color,outline:c.getSymbolOutlineFromScheme(m,g)}),classBreakInfos:l.map(function(b,d){return{minValue:b.minValue,maxValue:b.maxValue,symbol:c.createSymbol(t,{type:a.symbolType,color:r.color,size:u[d],widthAndDepth:n.minSize,outline:c.getSymbolOutlineFromScheme(r,t)}),label:b.label}}),defaultLabel:f?x.other:null,defaultSymbol:f?
c.createSymbol(t,{type:a.symbolType,color:r.noDataColor,size:c.getSymbolSizeFromScheme(r,t,!0),widthAndDepth:n.minSize,outline:c.getSymbolOutlineFromScheme(r,t)}):null,field:a.field,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,normalizationType:y,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===y?k.normalizationTotal:void 0,legendOptions:a.legendOptions,authoringInfo:new C({type:"class-breaks-size",classificationMethod:p,standardDeviationInterval:a.standardDeviationInterval})});
"standard-deviation"!==p&&L.setLabelsForClassBreaks({classBreakInfos:f.classBreakInfos,classificationMethod:p,normalizationType:y,round:!0});return d.resolve({renderer:f,sizeScheme:w.cloneScheme(h),classBreaksResult:k,defaultValuesUsed:b.defaultValuesUsed,basemapId:q.basemapId})}function z(a){return M(a).then(function(a){var b=a.normalizationField,g=b?"field":void 0;return(a.statistics?d.resolve(a.statistics):c.getSummaryStatistics({layer:a.layer,field:a.field,valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,
sqlWhere:a.sqlWhere,normalizationType:g,normalizationField:b,minValue:a.minValue,maxValue:a.maxValue,view:a.view})).then(function(e){var f=a.layer,g=a.field,h=g&&"function"!==typeof g?f.getField(g):null,k=h&&"date"===h.type,l=f.geometryType,f=F({basemap:a.basemap,geometryType:l,sizeScheme:a.sizeScheme,worldScale:a.worldScale,view:a.view});if(h=f.scheme){var p=G(h,l),m=(k=c.getDefaultDataRange(e,k,!1))||[e.min,e.max],l=[],r="height"===a.axis,n=r?a.axis:void 0,t=p[0],p=p[1];r&&(p=c.getSizeRangeForAxis({minSize:t,
maxSize:p},n),l.push(new D({axis:"width-and-depth",minSize:p.minSize})),p=p.maxSize);l.unshift(new D({field:g,valueExpression:a.valueExpression,valueExpressionTitle:a.valueExpressionTitle,valueUnit:"unknown",normalizationField:b,axis:n,minSize:t,maxSize:p,minDataValue:m[0],maxDataValue:m[1],legendOptions:a.legendOptions}));g=new K({type:"size",minSliderValue:e.min,maxSliderValue:e.max});g=new C({visualVariables:[g]});e=d.resolve({basemapId:f.basemapId,visualVariables:l,statistics:e,defaultValuesUsed:!!k,
sizeScheme:w.cloneScheme(h),authoringInfo:g})}else e=d.reject(c.createError("size-visual-variable:insufficient-info","Unable to find size scheme"));return e})})}Object.defineProperty(u,"__esModule",{value:!0});var I=Math.pow(2,53)-1;u.createVisualVariables=z;u.createContinuousRenderer=function(a){return N(a).then(function(a){return z(E(a)).then(function(b){var c=a.normalizationField;return H(b,c?"field":void 0,c,a)})})};u.createClassBreaksRenderer=function(a){return O(a).then(function(a){return c.getClassBreaks(P(a)).then(function(b){return S(a,
b)})})};u.createAgeRenderer=function(a){return Q(a).then(function(a){var b=a.defaultSymbolEnabled,c=a.view,e=a.layer,g=a.startTime,q=a.endTime,h=a.symbolType;return(a.unit?d.resolve({unit:a.unit,statistics:null,valueExpression:null}):n.getSuggestedAgeUnit({view:c,layer:e,startTime:g,endTime:q})).then(function(c){var d=c.unit,f=c.statistics,k=c.valueExpression||n.getAgeExpressions({layer:e,startTime:g,endTime:q,unit:d}).valueExpression;c=J.substitute({unit:d,startTime:n.formatDate(g,d,e),endTime:n.formatDate(q,
d,e)},x["ageInfo_"+d]);return z(E({layer:e,basemap:a.basemap,valueExpression:k,symbolType:h,statistics:f,legendOptions:{title:c},sizeScheme:a.sizeScheme,view:a.view})).then(function(a){a=H(a,null,null,{layer:e,valueExpression:k,defaultSymbolEnabled:b,symbolType:h});return m({},a,{unit:d})})})})}});