// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/paramHelper ../core/lang ../core/accessorSupport/decorators ./Renderer ./support/stretchRendererUtils ../tasks/support/ColorRamp ../tasks/support/colorRamps".split(" "),function(n,p,h,c,q,e,b,k,d,l,m){return function(f){function a(){var a=null!==f&&f.apply(this,arguments)||this;a.colorRamp=null;a.computeGamma=!1;a.dynamicRangeAdjustment=!0;a.gamma=[];a.maxPercent=null;a.minPercent=null;
a.numberOfStandardDeviations=null;a.outputMax=null;a.outputMin=null;a.sigmoidStrengthLevel=null;a.statistics=[];a.useGamma=!1;a.stretchType="none";a.type="raster-stretch";return a}h(a,f);g=a;a.prototype.readColorRamp=function(a,b){if(a)return m.fromJSON(a)};a.prototype.clone=function(){return new g({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:e.clone(this.statistics),gamma:e.clone(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,
numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:e.clone(this.colorRamp),dynamicRangeAdjustment:this.dynamicRangeAdjustment})};var g;c([b.property({type:l,json:{write:!0}})],a.prototype,"colorRamp",void 0);c([b.reader("colorRamp")],a.prototype,"readColorRamp",null);c([b.property({type:Boolean,json:{write:!0}})],a.prototype,"computeGamma",void 0);c([b.property({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],
a.prototype,"dynamicRangeAdjustment",void 0);c([b.property({type:[Number],json:{write:{allowNull:!0}}})],a.prototype,"gamma",void 0);c([b.property({type:Number,json:{write:{allowNull:!0}}})],a.prototype,"maxPercent",void 0);c([b.property({type:Number,json:{write:{allowNull:!0}}})],a.prototype,"minPercent",void 0);c([b.property({type:Number,json:{write:{allowNull:!0}}})],a.prototype,"numberOfStandardDeviations",void 0);c([b.property({type:Number,json:{read:{source:"max"},write:{target:"max",allowNull:!0}}})],
a.prototype,"outputMax",void 0);c([b.property({type:Number,json:{read:{source:"min"},write:{target:"min",allowNull:!0}}})],a.prototype,"outputMin",void 0);c([b.property({type:Number,json:{write:{allowNull:!0}}})],a.prototype,"sigmoidStrengthLevel",void 0);c([b.property({type:[[Number]],json:{write:{allowNull:!0}}})],a.prototype,"statistics",void 0);c([b.property({type:Boolean,json:{write:!0}})],a.prototype,"useGamma",void 0);c([b.property({type:d.stretchTypeJSONDict.apiValues,json:{type:d.stretchTypeJSONDict.jsonValues,
read:d.stretchTypeJSONDict.read,write:d.stretchTypeJSONDict.write}})],a.prototype,"stretchType",void 0);c([b.enumeration.serializable()({rasterStretch:"raster-stretch"})],a.prototype,"type",void 0);return a=g=c([b.subclass("esri.renderers.StretchRenderer")],a)}(b.declared(k))});