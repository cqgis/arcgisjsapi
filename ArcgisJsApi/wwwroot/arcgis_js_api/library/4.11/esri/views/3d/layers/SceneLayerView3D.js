// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/assignHelper ../../../core/tsSupport/declareExtendsHelper ../../../core/tsSupport/decorateHelper ../../../core/tsSupport/generatorHelper ../../../core/tsSupport/awaiterHelper @dojo/framework/shim/array @dojo/framework/shim/Set ../../../Graphic ../../../core/arrayUtils ../../../core/Logger ../../../core/watchUtils ../../../core/accessorSupport/decorators ../../../geometry/support/aaBoundingBox ../../../layers/support/fieldUtils ../../../tasks/support/Query ./I3SMeshView3D ./LayerView3D ./i3s/I3SGeometryUtil ./i3s/I3SQueryEngine ./i3s/I3SUtil ./support/DefinitionExpressionSceneLayerView ./support/layerViewUpdatingProperties ./support/PopupSceneLayerView ../support/projectionUtils ../../layers/support/FeatureFilter".split(" "),
function(M,N,O,v,g,w,x,y,z,A,B,C,m,e,n,D,E,F,G,k,H,q,I,J,K,r,L){var t=C.getLogger("esri.views.3d.layers.SceneLayerView3D"),u=[0,0,0,0];return function(p){function a(){var b=null!==p&&p.apply(this,arguments)||this;b._queryEngine=null;b.lodFactor=1;b.progressiveLoadFactor=1;b._elevationContext="scene";b._isIntegratedMesh=!1;return b}v(a,p);Object.defineProperty(a.prototype,"filter",{set:function(b){if(b){var c=["contains","intersects","disjoint"];b.where||b.distance||b.units||b.timeExtent||-1===c.indexOf(b.spatialRelationship)?
(t.warn("Unsupported filter: only geometry filters and spatialRelationships "+c.join(", ")+" are supported"),this._set("filter",null)):this._set("filter",b)}else this._set("filter",null)},enumerable:!0,configurable:!0});a.prototype.initialize=function(){var b=this;this.handles.add([m.init(this,["layer.renderer","definitionExpressionFields"],function(){return b._updateRequiredFields()}),m.init(this.layer,"rangeInfos",function(c){return b._rangeInfosChanged(c)}),m.init(this.layer,"renderer",function(c){return b._rendererChange(c)}),
this.watch(["parsedDefinitionExpression","layer.objectIdFilter","filter"],function(){return b._filterChange()})])};a.prototype.destroy=function(){};a.prototype._updateRequiredFields=function(){return x(this,void 0,void 0,function(){var b,c,a,d,h,l;return w(this,function(f){switch(f.label){case 0:return b=this,c=b.layer,a=c.fields,d=c.renderer,h=b.definitionExpressionFields,l=new z.default,d?[4,d.collectRequiredFields(l,a)]:[3,2];case 1:f.sent(),f.label=2;case 2:return D.collectFields(l,a,h),this._set("requiredFields",
y.from(l).sort()),[2]}})})};a.prototype._rangeInfosChanged=function(b){null!=b&&0<b.length&&t.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")};a.prototype.queryExtent=function(b){return this._ensureQueryEngine().queryExtent(b)};a.prototype.queryFeatureCount=function(b){return this._ensureQueryEngine().queryFeatureCount(b)};a.prototype.queryFeatures=function(b){return this._ensureQueryEngine().queryFeatures(b)};a.prototype.queryObjectIds=
function(b){return this._ensureQueryEngine().queryObjectIds(b)};a.prototype._ensureQueryEngine=function(){this._queryEngine||(this._queryEngine=this._createQueryEngine());return this._queryEngine};a.prototype._createQueryEngine=function(){var b=this,c={id:0,index:0,meta:null,bbCorners:new Float64Array(24)};return new H(this.layer,{forAll:function(a,d){b._forAllFeatures(function(f,d,e){c.id=f;c.index=d;c.meta=e;b._boundingBoxCornerPoints(d,e.engineObject,c.bbCorners);a(c)},d)},createGraphic:function(a){return b._createGraphic(a.index,
a.meta)},requestFields:function(a,c,h){return q.whenGraphicAttributes(b.layer,c,b._getObjectIdField(),h,function(c){var d=b._getGraphicIndices(a,c);return[{node:a,indices:d,graphics:c}]},{ignoreUnavailableFields:!1})},createExtentBuilder:function(){return b._createExtentBuilder()}},{enableObjectId:!0,enableOutFields:!!this.layer.objectIdField})};a.prototype._createExtentBuilder=function(){var b=this.view.renderSpatialReference,a=this.view.spatialReference,f=n.empty(),d=new Float64Array(24);return{add:function(c){r.bufferToBuffer(c.bbCorners,
b,0,d,a,0,8)&&n.expandWithBuffer(f,d,0,8)},getExtent:function(){return n.toExtent(f,a)}}};a.prototype.highlight=function(b,a){void 0===a&&(a={});var c=this._highlights;if(b instanceof E){var d=c.acquireSet(a),h=d.set,d=d.handle;this.queryObjectIds(b).then(function(b){return c.setFeatureIds(h,b)});return d}return this.inherited(arguments)};a.prototype._createLayerGraphic=function(b){b=new A(null,null,b);b.layer=this.layer;b.sourceLayer=this.layer;return b};a.prototype.canResume=function(){return this.inherited(arguments)&&
(!this._controller||this._controller.rootNodeVisible)};a.prototype.isUpdating=function(){return!(!this._controller||!this._controller.updating)};a.prototype.getFilters=function(){var b=this,a=this.inherited(arguments);if(this.layer.objectIdFilter){var f=new Float64Array(this.layer.objectIdFilter.ids),d="include"===this.layer.objectIdFilter.method;f.sort();a.push(function(a){return b._objectIdFilter(f,d,a)})}this.addSqlFilter(a,this.parsedDefinitionExpression,this.definitionExpressionFields,this.logError);
this.filter&&this.filter.geometry&&a.push(function(a,c){return b._maskFilter(a,c)});return a};a.prototype._maskFilter=function(b,a){var c=this.filter.geometry;r.mbsToMbs(a.node.mbs,this._controller.crsIndex,u,c.spatialReference||this.view.spatialReference);var d=k.acquireMaskFilterContext(this.filter.spatialRelationship,this.view,c,a.engineObject),c=k.intersectMaskWithMbs(d,u);switch(k.getIntersectRelation(d,c)){case 1:b.length=0;return;case 0:return}a.engineObject.getGeometryRecords()[0].geometry.componentCount===
a.featureIds.length&&q.filterInPlace(b,a.featureIds,function(a){return k.filterMask(a,d)})};a.prototype._filterChange=function(){var a=this;this.filter&&this.filter.geometry?k.loadGeometryEngine().then(function(){return a._applyFilters(!0)}):this.inherited(arguments)};a.prototype._objectIdFilter=function(a,c,f){for(var b=0,e=0;b<f.length;)0<=B.binaryIndexOf(a,f[b])===c&&(f[e]=f[b],e++),b++;f.length=e};g([e.property()],a.prototype,"layer",void 0);g([e.property({dependsOn:["_controller.updating"]})],
a.prototype,"updating",void 0);g([e.property({dependsOn:["_controller.rootNodeVisible"]})],a.prototype,"suspended",void 0);g([e.property(J.updatingPercentage)],a.prototype,"updatingPercentage",void 0);g([e.property({type:L})],a.prototype,"filter",null);g([e.property({type:[String],readOnly:!0})],a.prototype,"requiredFields",void 0);g([e.property({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.3dObject.lodFactor"})],a.prototype,"lodFactor",void 0);g([e.property({readOnly:!0,aliasOf:"_controller.updatingPercentage"})],
a.prototype,"updatingPercentageValue",void 0);return a=g([e.subclass("esri.views.3d.layers.SceneLayerView3D")],a)}(e.declared(G,F.I3SMeshView3D,K.PopupSceneLayerView,I.DefinitionExpressionSceneLayerView))});