// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../../request ../../core/has ../../core/ItemCache ../../core/promiseUtils ../../core/requireUtils ../../core/workers ../2d/tiling/TileKey ./GeometryUtils ./GlyphMosaic ./GlyphSource ./SpriteMosaic ./TileIndex ./VectorTileDisplayObject module".split(" "),function(u,D,k,E,v,g,w,x,l,r,y,z,A,q,B,C){var t=new v(10),h=new Map;return function(){function d(a,b,c,e){this.devicePixelRatio=b;this.allowUpdates=c;this._connection=this._glyphMosaic=this._spriteMosaic=null;this._updateQueue=
new Map;this._ongoingRequests=new Map;this._vectorTileLayer=a;this._container=e}d.prototype.destroy=function(){this.stop();this._vectorTileLayer=null;this._spriteMosaic&&(this._spriteMosaic.dispose(),this._spriteMosaic=null);this._glyphMosaic&&(this._glyphMosaic.dispose(),this._glyphMosaic=null)};Object.defineProperty(d.prototype,"initialized",{get:function(){return this._broadcastPromise&&this._broadcastPromise.isFulfilled()},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"spriteMosaic",
{get:function(){return this._spriteMosaic},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"glyphMosaic",{get:function(){return this._glyphMosaic},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"ongoingRequestCount",{get:function(){return this._ongoingRequests.size},enumerable:!0,configurable:!0});d.prototype.start=function(){var a=this;this.stop();var b=[],c=this._vectorTileLayer.loadSpriteSource(this.devicePixelRatio).then(function(c){a._spriteMosaic=new A(1024,
1024,250);a._spriteMosaic.setSpriteSource(c)});b.push(c);var e=this._vectorTileLayer.styleRepository,c=new z(e.glyphs);this._glyphMosaic=new y(1024,1024,c);var c=this._vectorTileLayer.sourceNameToSource,f;for(f in c)b.push(this._fetchTileMap(c[f]));f=x.open(w.getAbsMid("./WorkerTileHandler",u,C),{client:this}).then(function(c){a._connection=c});b.push(f);return this._broadcastPromise=g.all(b).then(function(){return a._connection.broadcast("setLayers",e.styleJSON)})};d.prototype.stop=function(){this._broadcastPromise&&
!this._broadcastPromise.isFulfilled()&&this._broadcastPromise.cancel();this._updateQueue.forEach(function(a){return a.cancel()});this._ongoingRequests.forEach(function(a){return a.cancel()});this._connection&&(this._connection.close(),this._connection=null)};d.prototype.updateStyle=function(){this._updateQueue.forEach(function(a){return a.cancel()});this._updateQueue.clear();this._ongoingRequests.forEach(function(a){return a.cancel()});this._ongoingRequests.clear();var a=this._vectorTileLayer.styleRepository,
b,c=g.create(function(a){b=a});g.all(this._connection.broadcast("updateStyle",a.styleJSON)).then(function(){return b()});return this._broadcastPromise=c};d.prototype.updateTile=function(a,b){var c=this;if(!this.allowUpdates)return g.resolve(null);if(!this._broadcastPromise.isFulfilled()||!this._connection)return g.reject(Error("no connection"));b=Math.round(r.degToByte(b.state.rotation));if(a.rotation===b)return g.resolve(null);var e,f=a.key;this._updateQueue.has(f.id)&&(e=this._updateQueue.get(f.id),
e.cancel(),this._updateQueue["delete"](f.id));a.rotation=b;e=a.client.invoke("updateSymbols",{key:a.id,rotation:b}).then(function(b){c._updateQueue["delete"](f.id);a.updateSymbolData(b);return b}).catch(function(a){if("cancel"!==a.dojoType)c._updateQueue["delete"](f.id)});this._updateQueue.set(a.id,e);return e};d.prototype.updateTileData=function(a){for(var b=a.tileId,c=this._container.children,e,f=0;f<c.length;f++)if(e=c[f],e.id===b){e.updateTileData(a.tileData);break}};d.prototype.getVectorTile=
function(a,b,c,e){void 0===e&&(e=0);a=new l(a,b,c,0);var f=new B(a,this._vectorTileLayer.tileInfo,this._vectorTileLayer.styleRepository,0),d=this.getTileData(a,0).then(function(a){a?f.setData(a.tileData,a.client):f.setData(null,null);return f});return g.create(function(a,c){d.then(function(c){return a(c)}).catch(function(a){return c(a)})})};d.prototype.getTileData=function(a,b){var c=this;if(!this._broadcastPromise.isFulfilled()||!this._connection)return g.reject(Error("no connection"));var e=a.id;
if(this._ongoingRequests.has(e))return this._ongoingRequests.get(e);var f=this._vectorTileLayer.sourceNameToSource,d=[],l=[],h;for(h in f){var k=f[h],q=k.getRefKey(a);d.push(q);l.push(k.name)}var p=!1,f=g.eachAlways(d).then(function(d){for(var f=Math.round(r.degToByte(b)),h=[],n=0;n<d.length;n++)if(null==d[n].value)h.push(g.reject("getRefKey failed for source "+l[n]));else{var k=c._getTileData(a,d[n].value,l[n]).then(function(a){return a&&a.protobuff?a:(p=!0,c._ongoingRequests.delete(e),g.reject())});
h.push(k)}return g.eachAlways(h).then(function(b){for(var h={},l=[],m=0;m<b.length;m++)b[m].value&&b[m].value.protobuff&&0<b[m].value.protobuff.byteLength&&(h[b[m].value.sourceName]={refKey:d[m].value.toString(),protobuff:b[m].value.protobuff},l.push(b[m].value.protobuff));if(0===Object.keys(h).length)return p=!0,c._ongoingRequests.delete(e),g.resolve(null);var k=c._connection.getAvailableClient();return k.invoke("createTileAndParse",{key:a.toString(),rotation:f,cacheTile:c.allowUpdates,sourceName2DataAndRefKey:h},
{transferList:l}).then(function(a){p=!0;c._ongoingRequests.delete(e);return{tileData:a,client:k}}).catch(function(b){p=!0;c._ongoingRequests.delete(e);k.invoke("destructTileData",a.id);return g.reject(b)})}).catch(function(a){c._ongoingRequests.delete(e);return g.reject(a)})}).catch(function(a){c._ongoingRequests.delete(e);return g.reject(a)});p||this._ongoingRequests.set(e,f);return f};d.prototype.getSprites=function(a){return this._spriteMosaic.getSpriteItems(a)};d.prototype.getGlyphs=function(a){return this._glyphMosaic.getGlyphItems(a.tileID,
a.font,a.codePoints)};d.prototype.getStyleRepository=function(){return this._vectorTileLayer.styleRepository};d.prototype._getTileData=function(a,b,c){return this.fetchTileData(b.toString(),c).then(function(a){return{protobuff:a,sourceName:c}})};d.prototype._fetchTileMap=function(a){if(a.capabilities.operations.supportsTileMap&&a.tileIndex||!a.tileMapURL)return g.resolve();var b=t.get(a.tileMapURL);if(b)return a.tileIndex=b,g.resolve();if(h.has(a.tileMapURL))return h.get(a.tileMapURL).then(function(b){a.tileIndex=
new q(b.data)});b=k(a.tileMapURL,{responseType:"json"});b.then(function(b){a.tileIndex=new q(b.data);h["delete"](a.tileMapURL);t.put(a.tileMapURL,a.tileIndex)});h.set(a.tileMapURL,b);return b};d.prototype.fetchTileData=function(a,b){a=l.pool.acquire(a);var c=this._vectorTileLayer.sourceNameToSource;if(!(b in c))return l.pool.release(a),g.reject(Error("invalid source name"));b=c[b].getSourceTileUrl(a.level,a.row,a.col);l.pool.release(a);return k(b,{responseType:"array-buffer"}).then(function(a){return a.data})};
return d}()});