// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/extendsHelper ../../../../core/Logger ../../../../core/promiseUtils ../../../../core/screenUtils ../DisplayObject ../webgl/enums ../webgl/shaders/MagnifierPrograms ../../../3d/support/imageUtils ../../../webgl/BufferObject ../../../webgl/programUtils ../../../webgl/Texture ../../../webgl/VertexArrayObject".split(" "),function(q,r,w,b,n,t,x,y,u,v,z,A,p,B){Object.defineProperty(r,"__esModule",{value:!0});var C=b.getLogger("esri.views.2d.engine.webgl.magnifier.Magnifier");
b=function(b){function h(){var a=null!==b&&b.apply(this,arguments)||this;a._maskPath=q.toUrl("../../../../images/magnifier/mask.png");a._overlayPath=q.toUrl("../../../../images/magnifier/overlay.png");a.visible=!1;return a}w(h,b);h.prototype.destroy=function(){this._readbackTexture&&(this._readbackTexture.dispose(),this._readbackTexture=null,this._maskTexture.dispose(),this._maskTexture=null,this._overlayTexture.dispose(),this._overlayTexture=null,this._vertexArrayObject.dispose(),this._vertexArrayObject=
null,this._program.dispose(),this._program=null)};Object.defineProperty(h.prototype,"magnifier",{get:function(){return this._magnifier},set:function(a){var e=this;this._magnifier=a;this._handle&&this._handle.remove();this._handle=a.watch("version",function(){e.visible=a.visible;e.requestRender()});this.visible=a.visible;this.requestRender()},enumerable:!0,configurable:!0});h.prototype.doRender=function(a){var e=this.stage.context;if(a.drawPhase===y.WGLDrawPhase.MAP&&this._updateRessources(e)){var l=
this._magnifier,f=1/l.factor,d=Math.ceil(f*this.overlay.width),m=Math.ceil(f*this.overlay.height),c=a.state.size,g=a.pixelRatio,f=g*c[0];a=g*c[1];var k=l.position||{x:.5*c[0],y:.5*c[1]},c=g*k.x,g=a-g*k.y,k=.5*d,b=.5*m;k>c?c=k:c>=f-k&&(c=f-k-1);b>g?g=b:g>=a-b&&(g=a-b-1);var k=c-k,b=g-b,h=this._readbackTexture;e.bindTexture(h,0);e.gl.copyTexImage2D(h.descriptor.target,0,h.descriptor.pixelFormat,k,b,d,m,0);d=(d=this.stage.background&&this.stage.background.color)?[d.a*d.r/255,d.a*d.g/255,d.a*d.b/255,
d.a]:[1,1,1,1];m=-1+2*((c+t.pt2px(l.offsetX))/f);l=-1+2*((g-t.pt2px(l.offsetY))/a);f=this.overlay.width/f*2;a=this.overlay.height/a*2;c=this._program;e.bindVAO(this._vertexArrayObject);e.bindTexture(this._overlayTexture,6);e.bindTexture(this._maskTexture,7);e.bindProgram(c);c.setUniform4fv("u_background",d);c.setUniform1i("u_readbackTexture",0);c.setUniform1i("u_overlyTexture",6);c.setUniform1i("u_maskTexture",7);c.setUniform2f("u_drawPos",m,l);c.setUniform1f("u_width",f);c.setUniform1f("u_height",
a);e.drawArrays(5,0,4);e.bindVAO()}};h.prototype._updateRessources=function(a){var e=this;if(!this._resourcePromise){a=void 0;a=this.mask?n.resolve():v.requestImage(this._maskPath).then(function(a){return e.mask=a});var b=void 0,b=this.overlay?n.resolve():v.requestImage(this._overlayPath).then(function(a){return e.overlay=a});this._resourcePromise=n.all([a,b]).then(function(){e.requestRender()});this.requestRender();return!1}if(!this._resourcePromise.isResolved())return this.requestRender(),!1;var f=
1/this._magnifier.factor,b=Math.ceil(f*this.overlay.width),f=Math.ceil(f*this.overlay.height);if(this._readbackTexture&&this._readbackTexture.descriptor.width===b&&this._readbackTexture.descriptor.height===f)return!0;if(this.overlay.width!==this.mask.width||this.overlay.height!==this.mask.height)return C.error("Overlay and mask images must have the same size"),!1;if(!this._program){var d=A.createProgram(a,u.magnifier);if(!d)return!1;this._program=d}this._vertexArrayObject||(d=new Uint16Array([0,1,
0,0,1,1,1,0]),this._vertexArrayObject=new B(a,u.magnifier.attributes,{geometry:[{name:"a_pos",count:2,type:5123,offset:0,stride:4,normalized:!1,divisor:0}]},{geometry:z.createVertex(a,35044,d)}));this._overlayTexture||(this._overlayTexture=new p(a,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9728,flipped:!0},this.overlay));this._maskTexture||(this._maskTexture=new p(a,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9728,
flipped:!0},this.mask));this._readbackTexture=new p(a,{target:3553,pixelFormat:6408,internalFormat:6408,dataType:5121,wrapMode:33071,samplingMode:9729,flipped:!1,width:b,height:f});return!0};return h}(x.DisplayObject);r.default=b});