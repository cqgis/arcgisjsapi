// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../Graphic ../../core/Collection ../../core/Handles ../../core/screenUtils ../../core/accessorSupport/decorators ../../geometry/geometryEngine ../../geometry/Point ../../geometry/Polyline ../../geometry/projection ../../geometry/SpatialReference ../../geometry/support/geodesicUtils ../../layers/GraphicsLayer ../../views/2d/draw/Draw ../../views/interactive/InteractiveToolBase ../../views/interactive/interactiveToolUtils".split(" "),
function(E,F,w,f,p,g,x,t,e,u,y,z,k,A,q,B,C,D,r){return function(v){function a(b){b=v.call(this,b)||this;b._drawActive=!1;b._handles=new x;b._sketchLayer=new B({listMode:"hide"});b._vertices=null;b._vertexDrag=null;b._vertexHoverIndex=-1;return b}w(a,v);a.prototype.initialize=function(){var b=this;this._draw=new C({view:this.view});var c=this.view;c.map.add(this._sketchLayer);c.focus();this._handles.add(this.watch(["viewModel.unit","viewModel.mode"],function(){b._updateMeasurements()}));this.projectionEngineRequired&&
this.projectionEngineSupported&&(k.isLoaded()||k.load())};a.prototype.destroy=function(){this.detach();this._handles.removeAll();this._sketchLayer.removeAll();this.viewModel.view.map.remove(this._sketchLayer);this.viewModel.measurement=null;this._draw&&(this._draw.destroy(),this._draw=null);this._handles&&(this._handles.destroy(),this._handles=null);this._sketchLayer&&(this._sketchLayer.destroy(),this._sketchLayer=null)};Object.defineProperty(a.prototype,"editable",{set:function(b){this._set("editable",
b);b||this._draw.reset();this._updateMeasurements()},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"projectionEngineRequired",{get:function(){if(!this.view||!this.view.spatialReference)return!1;var b=this.view.spatialReference;return!b.isWebMercator&&!b.isWGS84&&!q.isSupported(b)},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"projectionEngineSupported",{get:function(){return k.isSupported()},enumerable:!0,configurable:!0});a.prototype.show=function(){this._sketchLayer.visible=
!0};a.prototype.hide=function(){this._sketchLayer.visible=!1};a.prototype.reset=function(){this._vertexDrag=this._vertices=null;this._vertexHoverIndex=-1;this._sketchLayer.removeAll();this.viewModel.measurement=null};a.prototype.newMeasurement=function(){this.reset();r.setActive(this,!0);this._startSketch()};a.prototype.clearMeasurement=function(){this.reset();this._drawActive&&this._startSketch()};a.prototype.onInputEvent=function(b){var c=this,d=this.view;switch(b.type){case "pointer-move":this._updateCursor(t.createScreenPointFromEvent(b));
break;case "drag":switch(b.action){case "start":d.hitTest(t.createScreenPointFromEvent(b)).then(function(a){a=new g(a.results);if(0!==a.length&&(a=a.find(function(b){return b.graphic.layer===c._sketchLayer&&"point"===b.graphic.geometry.type}))){var d=a.graphic.geometry;a=(new g(c._vertices)).findIndex(function(b){return b[0]===d.x&&b[1]===d.y});c._vertexDrag={index:a,origin:d};r.setActive(c,!0);b.stopPropagation()}});break;case "update":if(this._vertexDrag){var a=d.toMap(t.createScreenPoint(b.origin.x,
b.origin.y)),d=d.toMap(b);this._vertices[this._vertexDrag.index]=[this._vertexDrag.origin.x+d.x-a.x,this._vertexDrag.origin.y+d.y-a.y];this._updateMeasurements();b.stopPropagation()}break;case "end":this._vertexDrag=null,r.setActive(this,!1)}}};a.prototype._startSketch=function(){var b=this;this._drawActive=!0;var a=this._draw.create("polyline",{mode:"click"});a.on("vertex-add",function(a){return b._updateSketch(a.vertices)});a.on("vertex-update",function(a){return b._updateSketch(a.vertices)});a.on("vertex-remove",
function(a){return b._updateSketch(a.vertices)});a.on("cursor-update",function(a){return b._updateSketch(a.vertices)});a.on("undo",function(a){return b._updateSketch(a.vertices)});a.on("redo",function(a){return b._updateSketch(a.vertices)});a.on("draw-complete",function(){return b._stopSketch()})};a.prototype._stopSketch=function(){r.setActive(this,!1);this._drawActive=!1};a.prototype._updateSketch=function(a){this._vertices=a;this._updateMeasurements()};a.prototype._updateCursor=function(a){var b=
this,d=this.viewModel.view;this._vertexDrag?this.cursor="grabbing":this._drawActive?this.cursor="crosshair":d.hitTest(a).then(function(a){var d=-1;if(0!==a.results.length&&(a=(new g(a.results)).map(function(a){return a.graphic}).find(function(a){return a&&a.layer===b._sketchLayer&&"point"===a.geometry.type})))var c=a.geometry,d=(new g(b._vertices)).findIndex(function(a){return a[0]===c.x&&a[1]===c.y});d!==b._vertexHoverIndex&&(b._vertexHoverIndex=d,b.cursor=-1===b._vertexHoverIndex?null:"pointer",
b._updateMeasurements())})};a.prototype._updateMeasurements=function(){var a=this;if(!(!this._vertices||this.projectionEngineRequired&&!k.isLoaded()||(this._sketchLayer.removeAll(),2>this._vertices.length))){var c=this.viewModel,d=c.palette,e=c.view.spatialReference,f=[],l=q.isSupported(e),g=!l&&!e.isWebMercator&&!e.isWGS84,m=new z({paths:[this._vertices],spatialReference:e}),h=g?k.project(m,A.WGS84):m,n=null;l||g?(c.measurement={geometry:h,length:q.geodesicLengths([h],"meters")[0]},n=q.geodesicDensify(h,
1E5)):(l=u.planarLength(h,"meters"),"geodesic"===c.mode||"auto"===c.mode&&l>=c.geodesicDistanceThreshold?(c.measurement={geometry:h,length:u.geodesicLength(h,"meters")},n=u.geodesicDensify(m,1E5,"meters")):(c.measurement={geometry:h,length:l},n=m.clone()));f.push(new p({geometry:n,symbol:{type:"simple-line",cap:"butt",join:"round",color:d.pathPrimaryColor,width:d.pathWidth}}),new p({geometry:n,symbol:{type:"simple-line",style:"dash",cap:"butt",join:"round",color:d.pathSecondaryColor,width:d.pathWidth-
2}}));f.push(new p({geometry:m.extent.center,symbol:{type:"text",color:[255,255,255,1],haloColor:[0,0,0,.5],haloSize:2,text:c.measurementLabel,font:{size:14,family:"sans-serif"}}}));this.editable&&this._vertices.forEach(function(b,c){c=a._vertexHoverIndex===c?1.5:1;f.push(new p({geometry:new y({x:b[0],y:b[1],spatialReference:e}),symbol:{type:"simple-marker",color:d.handleColor,size:d.handleWidth*c,outline:{type:"simple-line",width:0}}}))});this._sketchLayer.addMany(f)}};f([e.property({constructOnly:!0})],
a.prototype,"viewModel",void 0);f([e.property()],a.prototype,"cursor",void 0);f([e.property({value:!0})],a.prototype,"editable",null);f([e.property({dependsOn:["view.spatialReference"],readOnly:!0})],a.prototype,"projectionEngineRequired",null);f([e.property({readOnly:!0})],a.prototype,"projectionEngineSupported",null);return a=f([e.subclass("esri.widgets.DistanceMeasurement2D.DistanceMeasurement2DTool")],a)}(e.declared(D))});