// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.11/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/paramHelper ../core/tsSupport/generatorHelper ../core/tsSupport/awaiterHelper @dojo/framework/shim/array ../PopupTemplate ../renderers ../request ../symbols ../core/asyncUtils ../core/Collection ../core/Error ../core/Handles ../core/kebabDictionary ../core/Logger ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators ../geometry/Extent ../geometry/HeightModelInfo ../geometry/SpatialReference ./Layer ./graphics/editingSupport ./graphics/sources/MemorySource ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/arcgisLayerUrl ./support/commonProperties ./support/FeatureIndex ./support/FeatureProcessing ./support/FeatureReduction ./support/FeatureReductionSelection ./support/FeatureTemplate ./support/FeatureType ./support/Field ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ./support/layerSourceUtils ./support/Relationship ../renderers/support/jsonUtils ../renderers/support/styleUtils ../support/popupUtils ../symbols/support/jsonUtils ../tasks/support/AttachmentQuery ../tasks/support/FeatureSet ../tasks/support/Query ../tasks/support/RelationshipQuery".split(" "),
function(v,ra,J,K,e,l,L,M,N,O,t,P,w,Q,p,g,R,S,T,U,h,z,d,V,W,A,X,Y,B,Z,aa,ba,ca,da,ea,q,k,C,fa,ga,ha,D,E,ia,n,ja,F,ka,la,G,ma,na,x,oa,pa,r,qa){function f(d,c,b){return!(d&&d.hasOwnProperty(c)?!d[c]:!b)}var I=new S.default({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"}),y=T.getLogger("esri.layers.FeatureLayer");return function(H){function c(b){var a=H.call(this)||this;a._handles=new R;
a.capabilities=null;a.copyright=null;a.displayField=null;a.definitionExpression=null;a.dynamicDataSource=null;a.editFieldsInfo=null;a.editingEnabled=!0;a.elevationInfo=null;a.featureReduction=null;a.fields=null;a.fullExtent=null;a.gdbVersion=null;a.geometryProperties=null;a.geometryType=null;a.hasM=void 0;a.hasZ=void 0;a.heightModelInfo=null;a.historicMoment=null;a.isTable=!1;a.labelsVisible=!0;a.labelingInfo=null;a.layerId=void 0;a.legendEnabled=!0;a.maxRecordCount=void 0;a.tileMaxRecordCount=void 0;
a.minScale=0;a.maxScale=0;a.objectIdField=null;a.path=null;a.popupEnabled=!0;a.popupTemplate=null;a.relationships=null;a.returnM=void 0;a.returnZ=void 0;a.screenSizePerspectiveEnabled=!0;a.serviceDefinitionExpression=null;a.spatialReference=A.WGS84;a.templates=null;a.timeInfo=null;a.title=null;a.sublayerTitleMode="item-title";a.trackIdField=null;a.type="feature";a.typeIdField=null;a.types=null;a.indexes=new (p.ofType(C.FeatureIndex));a.userIsAdmin=!1;a.version=void 0;a.visible=!0;a.when().then(function(){return a._setOutFields()});
return a}K(c,H);c.prototype.normalizeCtorArgs=function(b,a){return"string"===typeof b?J({url:b},a):b};c.prototype.load=function(){var b=this;if(this.portalItem&&this.portalItem.loaded&&this.source)this.addResolvingPromise(this.createGraphicsSource().then(function(a){return b._initLayerProperties(a)}));else{var a=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection"]}).catch(function(a){return a}).then(function(){if(b.url&&null==b.layerId&&/FeatureServer|MapServer\/*$/i.test(b.url))return b._fetchFirstLayerId().then(function(a){null!=
a&&(b.layerId=a)})}).then(function(){if(!b.url&&!b._hasMemorySource())throw new g("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return b.createGraphicsSource().then(function(a){return b._initLayerProperties(a)})});this.addResolvingPromise(a);return this.when()}};c.prototype.readCapabilities=function(b,a){a=a.layerDefinition||a;return{data:this._readDataCapabilities(a),operations:this._readOperationsCapabilities(a.capabilities||b,a),query:this._readQueryCapabilities(a),
queryRelated:this._readQueryRelatedCapabilities(a),editing:this._readEditingCapabilities(a)}};c.prototype.readEditingEnabled=function(b,a){return"Query"===a.capabilities?!1:!0};c.prototype.writeEditingEnabled=function(b,a,c,d){b||(a.capabilities="Query")};Object.defineProperty(c.prototype,"fieldsMap",{get:function(){var b=this.fields,a=new Map;if(!b)return a;for(var c=0;c<b.length;c++){var d=b[c],e=d&&d.name&&d.name.trim();e&&(a.set(e,d),a.set(e.toLowerCase(),d))}if(this.processing&&this.processing.fields)for(b=
0,c=this.processing.fields;b<c.length;b++)if(e=(d=c[b])&&d.name&&d.name.trim())a.set(e,d),a.set(e.toLowerCase(),d);return a},enumerable:!0,configurable:!0});c.prototype.readIsTable=function(b,a){a=a&&a.layerDefinition||a;return"Table"===a.type};Object.defineProperty(c.prototype,"hasService",{get:function(){return!this._hasMemorySource()},enumerable:!0,configurable:!0});c.prototype.readMinScale=function(b,a){return a.effectiveMinScale||b||0};c.prototype.readMaxScale=function(b,a){return a.effectiveMaxScale||
b||0};c.prototype.readObjectIdFieldFromService=function(b,a){a=a.layerDefinition||a;if(a.objectIdField)return a.objectIdField;if(a.fields)for(b=0,a=a.fields;b<a.length;b++){var c=a[b];if("esriFieldTypeOID"===c.type)return c.name}};Object.defineProperty(c.prototype,"outFields",{set:function(b){Array.isArray(b)?this._setOutFields(b):this._set("outFields",null)},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"parsedUrl",{get:function(){var b=this.url?z.urlToObject(this.url):null;if(null!=
b)if(null!=this.layerId)b.path=z.join(b.path,this.layerId.toString());else if(null!=this.dynamicDataSource){var a={source:ka.sourceToJSON(this.dynamicDataSource)};b.query={layer:JSON.stringify(a)}}return b},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"renderer",{set:function(b){n.fixRendererFields(b,this.fields);this._set("renderer",b)},
enumerable:!0,configurable:!0});c.prototype.readRenderer=function(b,a,c){a=a.layerDefinition||a;var d=a.drawingInfo&&a.drawingInfo.renderer||void 0,e,m;if(d)(e=G.read(d,a,c)||void 0)||y.error("Failed to create renderer",{rendererDefinition:a.drawingInfo.renderer,layer:this,context:c});else if(a.defaultSymbol)x.read(a.defaultSymbol,a,c),a.types&&a.types.length?(e=new t.UniqueValueRenderer({defaultSymbol:m,field:a.typeIdField}),a.types.forEach(function(a){d.addUniqueValueInfo(a.id,x.read(a.symbol,a,
c))})):e=new t.SimpleRenderer({symbol:m});else if("Table"!==a.type){switch(a.geometryType){case "esriGeometryPoint":case "esriGeometryMultipoint":m=new w.SimpleMarkerSymbol;break;case "esriGeometryPolyline":m=new w.SimpleLineSymbol;break;case "esriGeometryPolygon":m=new w.SimpleFillSymbol}e=m&&new t.SimpleRenderer({symbol:m})}return e};c.prototype.writeRenderer=function(b,a,c,d){G.writeTarget(b,a,c,d)};Object.defineProperty(c.prototype,"source",{set:function(b){var a=this._get("source");a!==b&&(a&&
a&&a.isInstanceOf&&a.isInstanceOf(p)&&this._resetMemorySource(a),b&&b&&b.isInstanceOf&&b.isInstanceOf(p)&&this._initMemorySource(b),this._set("source",b))},enumerable:!0,configurable:!0});c.prototype.castSource=function(b){return b?Array.isArray(b)||b&&b.isInstanceOf&&b.isInstanceOf(p)?new B.default({layer:this,items:b}):b:null};c.prototype.readSource=function(b,a){b=pa.fromJSON(a.featureSet);return new B.default({layer:this,items:b&&b.features||[]})};c.prototype.readTemplates=function(b,a){var c=
a.editFieldsInfo;a=c&&c.creatorField;c=c&&c.editorField;b=b&&b.map(function(a){return D.fromJSON(a)});this._fixTemplates(b,a);this._fixTemplates(b,c);return b};c.prototype.readTitle=function(b,a){b=a.layerDefinition&&a.layerDefinition.name||a.name;a=a.title||a.layerDefinition&&a.layerDefinition.title;if(b){a=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return this.url?q.titleFromUrlAndName(this.url,b):b;b=b||this.url&&q.parse(this.url).title;if(!b)return;"item-title-and-service-name"===
this.sublayerTitleMode&&a&&(b=a+" - "+b);return q.cleanTitle(b)}if("item-title"===this.sublayerTitleMode&&a)return a};c.prototype.readTitleFromWebMap=function(b,a){return a.title||a.layerDefinition&&a.layerDefinition.name};c.prototype.readTypeIdField=function(b,a){a=a.layerDefinition||a;if(b=a.typeIdField)if(a=this.getField(b,a.fields))b=a.name;return b};c.prototype.readTypes=function(b,a){var c=this;a=a.layerDefinition||a;b=a.types;var d=(a=a.editFieldsInfo)&&a.creatorField,e=a&&a.editorField;return b&&
b.map(function(a){a=E.fromJSON(a);c._fixTemplates(a.templates,d);c._fixTemplates(a.templates,e);return a})};Object.defineProperty(c.prototype,"url",{set:function(b){b=q.sanitizeUrlWithLayerId(this,b,y);this._set("url",b.url);null!=b.layerId&&this._set("layerId",b.layerId)},enumerable:!0,configurable:!0});c.prototype.writeUrl=function(b,a,c,d){q.writeUrlWithLayerId(this,b,null,a,d)};c.prototype.readVersion=function(b,a){return a.currentVersion?a.currentVersion:a.hasOwnProperty("capabilities")||a.hasOwnProperty("drawingInfo")||
a.hasOwnProperty("hasAttachments")||a.hasOwnProperty("htmlPopupType")||a.hasOwnProperty("relationships")||a.hasOwnProperty("timeInfo")||a.hasOwnProperty("typeIdField")||a.hasOwnProperty("types")?10:9.3};c.prototype.readVisible=function(b,a){if(a.layerDefinition&&null!=a.layerDefinition.defaultVisibility)return!!a.layerDefinition.defaultVisibility;if(null!=a.visibility)return!!a.visibility};c.prototype.addAttachment=function(b,a){var c=this;return this.load().then(function(){return c._checkAttachmentSupport(b)}).then(function(){return"addAttachment"in
c.source?c.source.addAttachment(b,a):h.reject(new g("FeatureLayer","Layer source does not support addAttachment capability"))})};c.prototype.updateAttachment=function(b,a,c){var d=this;return this.load().then(function(){return d._checkAttachmentSupport(b)}).then(function(){return"updateAttachment"in d.source?d.source.updateAttachment(b,a,c):h.reject(new g("FeatureLayer","Layer source does not support updateAttachment capability"))})};c.prototype.applyEdits=function(b){return Q.safeCast(Y.applyEdits(this,
b))};c.prototype.on=function(b,a){return this.inherited(arguments)};c.prototype.createPopupTemplate=function(b){return na.createPopupTemplate(this,b)};c.prototype.createGraphicsSource=function(){var b=this;return this._hasMemorySource()?(this.emit("graphics-source-create",{graphicsSource:this.source}),this.source.load()):h.create(function(a){return v(["./graphics/sources/FeatureLayerSource"],a)}).then(function(a){return(new a.default({layer:b})).load()}).then(function(a){b.emit("graphics-source-create",
{graphicsSource:a});return a})};c.prototype.createQuery=function(){var b=new r,a=this.get("capabilities.data");b.gdbVersion=this.gdbVersion;b.historicMoment=this.historicMoment;b.returnGeometry=!0;a&&(a.supportsZ&&null!=this.returnZ&&(b.returnZ=this.returnZ),a.supportsM&&null!=this.returnM&&(b.returnM=this.returnM));b.outFields=["*"];b.where=this.definitionExpression||"1\x3d1";b.multipatchOption="multipatch"===this.geometryType?"xyFootprint":null;return b};c.prototype.deleteAttachments=function(b,
a){var c=this;return this.load().then(function(){return c._checkAttachmentSupport(b)}).then(function(){return"deleteAttachments"in c.source?c.source.deleteAttachments(b,a):h.reject(new g("FeatureLayer","Layer source does not support deleteAttachments capability"))})};c.prototype.getFeatureType=function(b){var a=this.typeIdField;if(!a||!b)return null;var c=b.attributes?b.attributes[a]:void 0;if(null==c)return null;var d=null;this.types.some(function(a){var b=a.id;if(null==b)return!1;b.toString()===
c.toString()&&(d=a);return!!d});return d};c.prototype.getFieldDomain=function(b,a){var c=this,d,e=!1;a=(a=a&&a.feature)&&a.attributes;var f=this.typeIdField&&a&&a[this.typeIdField];null!=f&&this.types&&(e=this.types.some(function(a){return a.id==f?((d=a.domains&&a.domains[b])&&"inherited"===d.type&&(d=c._getLayerDomain(b)),!0):!1}));e||d||(d=this._getLayerDomain(b));return d};c.prototype.getField=function(b,a){return a?n.getField(a,b):this.fieldsMap.get(b)||this.fieldsMap.get(b.toLowerCase())};c.prototype.queryAttachments=
function(b){var a=this;return this.load().then(function(){if(!a.get("capabilities.data.supportsAttachment"))return h.reject(new g("FeatureLayer","this layer doesn't support attachments"));var c=b.attachmentTypes,d=b.objectIds,e=b.globalIds,f=b.num,u=b.size,l=b.start,k=b.where;return!a.get("capabilities.operations.supportsQueryAttachments")&&(c=c&&c.length,e=e&&e.length,u=u&&u.length,d&&1<d.length||c||e||u||f||l||k)?h.reject(new g("FeatureLayer","when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported",
b)):d&&d.length||k?"queryAttachments"in a.source?a.source.queryAttachments(b):h.reject(new g("FeatureLayer","Layer source does not support queryAttachments capability",b)):h.reject(new g("FeatureLayer","'objectIds' or 'where' are required to perform attachment query",b))})};c.prototype.queryFeatures=function(b,a){var c=this;return this.load().then(function(){return c.source.queryFeatures(b||c.createQuery(),a)}).then(function(a){if(a&&a.features)for(var b=0,d=a.features;b<d.length;b++){var e=d[b];
e.layer=e.sourceLayer=c}return a})};c.prototype.queryObjectIds=function(b,a){var c=this;return this.load().then(function(){return c.source.queryObjectIds?c.source.queryObjectIds(b||c.createQuery(),a):h.reject(new g("FeatureLayer","Layer source does not support queryObjectIds capability"))})};c.prototype.queryFeatureCount=function(b,a){var c=this;return this.load().then(function(){return c.source.queryFeatureCount?c.source.queryFeatureCount(b||c.createQuery(),a):h.reject(new g("FeatureLayer","Layer source does not support queryFeatureCount capability"))})};
c.prototype.queryExtent=function(b,a){var c=this;return this.load().then(function(){return c.source.queryExtent?c.source.queryExtent(b||c.createQuery(),a):h.reject(new g("FeatureLayer","Layer source does not support queryExtent capability"))})};c.prototype.queryRelatedFeatures=function(b){var a=this;return this.load().then(function(){return"queryRelatedFeatures"in a.source?a.source.queryRelatedFeatures(b):h.reject(new g("FeatureLayer","Layer source does not support queryRelatedFeatures capability"))})};
c.prototype.read=function(b,a){var c=b.featureCollection;if(c){var d=c.layers;d&&1===d.length&&(this.inherited(arguments,[d[0],a]),null!=c.showLegend&&this.inherited(arguments,[{showLegend:c.showLegend},a]))}this.inherited(arguments,[b,a]);a&&"service"===a.origin&&this.revert(["objectIdField","fields","timeInfo"],"service")};c.prototype.write=function(b,a){return a&&("web-scene"===a.origin||"web-map"===a.origin)&&a.messages&&this.isTable?(a.messages.push(new g("layer:unsupported","Layers ("+this.title+
", "+this.id+") of type '"+this.declaredClass+"' using a Table source cannot written to web scenes",{layer:this})),null):this.inherited(arguments)};c.prototype.importLayerViewModule=function(b){switch(b.type){case "2d":return h.create(function(a){return v(["../views/2d/layers/FeatureLayerView2D"],a)});case "3d":return h.create(function(a){return v(["../views/3d/layers/FeatureLayerView3D"],a)})}};c.prototype._checkAttachmentSupport=function(b){var a=b.attributes,c=this.objectIdField;if(!this.get("capabilities.data.supportsAttachment"))return h.reject(new g("FeatureLayer",
"this layer doesn't support attachments"));if(!b)return h.reject(new g("FeatureLayer","A feature is required to add/delete/update attachments"));if(!a)return h.reject(new g("FeatureLayer","'attributes' are required on a feature to query attachments"));if(!a[c])return h.reject(new g("FeatureLayer","feature is missing the identifying attribute "+c))};c.prototype._getLayerDomain=function(b){if(!this.fields)return null;var a=null;this.fields.some(function(c){c.name===b&&(a=c.domain);return!!a});return a};
c.prototype._fetchFirstLayerId=function(){return P(this.url,{query:{f:"json"},responseType:"json"}).then(function(b){if(b=b.data){if(Array.isArray(b.layers)&&0<b.layers.length)return b.layers[0].id;if(Array.isArray(b.tables)&&0<b.tables.length)return b.tables[0].id}})};c.prototype._initLayerProperties=function(b){return M(this,void 0,void 0,function(){return L(this,function(a){this._set("source",b);b.layerDefinition&&this.read(b.layerDefinition,{origin:"service",url:this.parsedUrl});this._verifySource();
this._verifyFields();n.fixRendererFields(this.renderer,this.fields);n.fixTimeInfoFields(this.timeInfo,this.fields);return[2,ma.loadStyleRenderer(this,{origin:"service"})]})})};c.prototype._verifyFields=function(){var b=this.parsedUrl&&this.parsedUrl.path||"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+b+")");this.isTable||this._hasMemorySource()||-1!==b.search(/\/FeatureServer\//i)||this.fields&&this.fields.some(function(a){return"geometry"===
a.type})||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+b+")")};c.prototype._fixTemplates=function(b,a){b&&b.forEach(function(b){(b=b.prototype&&b.prototype.attributes)&&a&&delete b[a]})};c.prototype._verifySource=function(){if(this._hasMemorySource()){if(this.url)throw new g("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url");
}else if(!this.url)throw new g("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source");};c.prototype._initMemorySource=function(b){var a=this;b.forEach(function(b){b.layer=a;b.sourceLayer=a});this._handles.add([b.on("after-add",function(b){b.item.layer=a;b.item.sourceLayer=a}),b.on("after-remove",function(a){a.item.layer=null;a.item.sourceLayer=null})],"fl-source")};c.prototype._resetMemorySource=function(b){b.forEach(function(a){a.layer=null;
a.sourceLayer=null});this._handles.remove("fl-source")};c.prototype._hasMemorySource=function(){return!(this.url||!this.source)};c.prototype._readDataCapabilities=function(b){return{supportsAttachment:f(b,"hasAttachments",!1),supportsM:f(b,"hasM",!1),supportsZ:f(b,"hasZ",!1)}};c.prototype._readOperationsCapabilities=function(b,a){b=b?b.toLowerCase().split(",").map(function(a){return a.trim()}):[];var c=-1!==b.indexOf("editing"),d=c&&-1!==b.indexOf("create"),e=c&&-1!==b.indexOf("delete"),g=c&&-1!==
b.indexOf("update");!c||d||e||g||(d=e=g=!0);return{supportsCalculate:f(a,"supportsCalculate",!1),supportsTruncate:f(a,"supportsTruncate",!1),supportsValidateSql:f(a,"supportsValidateSql",!1),supportsAdd:d,supportsDelete:e,supportsEditing:c,supportsQuery:-1!==b.indexOf("query"),supportsQueryAttachments:f(a.advancedQueryCapabilities,"supportsQueryAttachments",!1),supportsResizeAttachments:f(a,"supportsAttachmentsResizing",!1),supportsUpdate:g,supportsExceedsLimitStatistics:f(a,"supportsExceedsLimitStatistics",
!1)}};c.prototype._readQueryCapabilities=function(b){var a=b.advancedQueryCapabilities,c=b.ownershipBasedAccessControlForFeatures,d=b.archivingInfo,e=(b.supportedQueryFormats||"").split(",").reduce(function(a,b){(b=b.toLowerCase().trim())&&a.add(b);return a},new Set);return{supportsStatistics:f(a,"supportsStatistics",b.supportsStatistics),supportsCentroid:f(a,"supportsReturningGeometryCentroid",!1),supportsDistance:f(a,"supportsQueryWithDistance",!1),supportsDistinct:f(a,"supportsDistinct",b.supportsAdvancedQueries),
supportsExtent:f(a,"supportsReturningQueryExtent",!1),supportsGeometryProperties:f(a,"supportsReturningGeometryProperties",!1),supportsHavingClause:f(a,"supportsHavingClause",!1),supportsOrderBy:f(a,"supportsOrderBy",b.supportsAdvancedQueries),supportsPagination:f(a,"supportsPagination",!1),supportsQuantization:f(b,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:f(b,"supportsQuantizationEditMode",!1),supportsQueryGeometry:f(b,"supportsReturningQueryGeometry",!1),supportsResultType:f(a,
"supportsQueryWithResultType",!1),supportsMaxRecordCountFactor:f(a,"supportsMaxRecordCountFactor",!1),supportsSqlExpression:f(a,"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:f(b,"useStandardizedQueries",!1),supportsQueryByOthers:f(c,"allowOthersToQuery",!0),supportsHistoricMoment:f(d,"supportsQueryWithHistoricMoment",!1),supportsFormatPBF:e.has("pbf"),supportsDisjointSpatialRelationship:f(a,"supportsDisjointSpatialRel",!1)}};c.prototype._readQueryRelatedCapabilities=function(b){b=b.advancedQueryCapabilities;
var a=f(b,"supportsAdvancedQueryRelated",!1);return{supportsPagination:f(b,"supportsQueryRelatedPagination",!1),supportsCount:a,supportsOrderBy:a}};c.prototype._readEditingCapabilities=function(b){var a=b.ownershipBasedAccessControlForFeatures;return{supportsGeometryUpdate:f(b,"allowGeometryUpdates",!0),supportsGlobalId:f(b,"supportsApplyEditsWithGlobalIds",!1),supportsRollbackOnFailure:f(b,"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:f(b,"allowUpdateWithoutMValues",!1),supportsUploadWithItemId:f(b,
"supportsAttachmentsByUploadId",!1),supportsDeleteByAnonymous:f(a,"allowAnonymousToDelete",!0),supportsDeleteByOthers:f(a,"allowOthersToDelete",!0),supportsUpdateByAnonymous:f(a,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:f(a,"allowOthersToUpdate",!0)}};c.prototype._setOutFields=function(b){void 0===b&&(b=this._get("outFields"));if(b&&b.length)if(N.includes(b,"*"))this._set("outFields",["*"]);else if(this.loaded){for(var a=0,c=b;a<c.length;a++){var d=c[a];n.hasField(this.fields,d)||y.error(new g("feature-layer:invalid-field",
"Invalid field "+d+" found in outFields",{layer:this,outFields:b}))}this._set("outFields",n.fixFields(this.fields,b))}else this._set("outFields",b)};e([d.property({readOnly:!0,json:{read:!1}})],c.prototype,"capabilities",void 0);e([d.reader("service","capabilities","advancedQueryCapabilities archivingInfo supportsStatistics supportsAdvancedQueries hasAttachments hasM hasZ supportsAttachmentsResizing supportsCalculate supportsTruncate supportsValidateSql supportsCoordinatesQuantization supportsQuantizationEditMode useStandardizedQueries ownershipBasedAccessControlForFeatures allowGeometryUpdates supportsApplyEditsWithGlobalIds supportsRollbackOnFailureParameter allowUpdateWithoutMValues supportsAttachmentsByUploadId capabilities supportedQueryFormats supportsExceedsLimitStatistics".split(" "))],
c.prototype,"readCapabilities",null);e([d.property({type:String,json:{read:{source:"layerDefinition.copyrightText"},origins:{service:{read:{source:"copyrightText"}}}}})],c.prototype,"copyright",void 0);e([d.property({type:String,json:{read:{source:"layerDefinition.displayField"},origins:{service:{read:{source:"displayField"}}}}})],c.prototype,"displayField",void 0);e([d.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],
c.prototype,"definitionExpression",void 0);e([d.property({readOnly:!0,json:{read:x.read}})],c.prototype,"defaultSymbol",void 0);e([d.property()],c.prototype,"dynamicDataSource",void 0);e([d.property({readOnly:!0})],c.prototype,"editFieldsInfo",void 0);e([d.property({type:Boolean})],c.prototype,"editingEnabled",void 0);e([d.reader(["portal-item","web-map","web-scene"],"editingEnabled",["capabilities"])],c.prototype,"readEditingEnabled",null);e([d.writer(["portal-item","web-map","web-scene"],"editingEnabled")],
c.prototype,"writeEditingEnabled",null);e([d.property(k.elevationInfo)],c.prototype,"elevationInfo",void 0);e([d.property({types:{key:"type",base:ga.default,typeMap:{selection:ha.default}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],c.prototype,"featureReduction",void 0);e([d.property({type:[ia],json:{origins:{service:{read:!0}},read:{source:"layerDefinition.fields"}}})],c.prototype,"fields",void 0);e([d.property({readOnly:!0,
dependsOn:["fields","processing"]})],c.prototype,"fieldsMap",null);e([d.property({type:V,json:{origins:{service:{read:{source:"extent"}}},read:{source:"layerDefinition.extent"}}})],c.prototype,"fullExtent",void 0);e([d.property()],c.prototype,"gdbVersion",void 0);e([d.property({readOnly:!0})],c.prototype,"geometryProperties",void 0);e([d.property({type:"point polygon polyline multipoint multipatch mesh".split(" "),json:{origins:{service:{read:I.read}},read:{source:"layerDefinition.geometryType",reader:I.read}}})],
c.prototype,"geometryType",void 0);e([d.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasM"}}})],c.prototype,"hasM",void 0);e([d.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasZ"}}})],c.prototype,"hasZ",void 0);e([d.property({readOnly:!0,type:W})],c.prototype,"heightModelInfo",void 0);e([d.property({type:Date})],c.prototype,"historicMoment",void 0);e([d.property({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],
c.prototype,"id",void 0);e([d.property({readOnly:!0})],c.prototype,"isTable",void 0);e([d.reader("service","isTable",["type"]),d.reader("isTable",["layerDefinition.type"])],c.prototype,"readIsTable",null);e([d.property({dependsOn:["loaded","url","source"],readOnly:!0})],c.prototype,"hasService",null);e([d.property(k.labelsVisible)],c.prototype,"labelsVisible",void 0);e([d.property({type:[ja],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:F.reader},write:{target:"drawingInfo.labelingInfo",
enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:F.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],c.prototype,"labelingInfo",void 0);e([d.property({type:Number,json:{origins:{service:{read:{source:"id"}}},read:!1}})],c.prototype,"layerId",void 0);e([d.property(k.legendEnabled)],c.prototype,"legendEnabled",void 0);e([d.property({type:["show","hide"]})],c.prototype,"listMode",void 0);e([d.property({type:Number,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.maxRecordCount"}}})],
c.prototype,"maxRecordCount",void 0);e([d.property({type:Number,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.tileMaxRecordCount"}}})],c.prototype,"tileMaxRecordCount",void 0);e([d.property({type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.minScale"},write:{target:"layerDefinition.minScale"}}})],c.prototype,"minScale",void 0);e([d.reader("service","minScale",["minScale","effectiveMinScale"])],c.prototype,"readMinScale",null);e([d.property({type:Number,
json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.maxScale"},write:{target:"layerDefinition.maxScale"}}})],c.prototype,"maxScale",void 0);e([d.reader("service","maxScale",["maxScale","effectiveMaxScale"])],c.prototype,"readMaxScale",null);e([d.property({type:String})],c.prototype,"objectIdField",void 0);e([d.reader("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"]),d.reader("service","objectIdField",["objectIdField","fields"])],c.prototype,"readObjectIdFieldFromService",
null);e([d.property({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],c.prototype,"operationalLayerType",void 0);e([d.property()],c.prototype,"outFields",null);e([d.property({readOnly:!0,dependsOn:["layerId"]})],c.prototype,"parsedUrl",null);e([d.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],c.prototype,"path",void 0);e([d.property(k.popupEnabled)],c.prototype,"popupEnabled",void 0);e([d.property({type:O,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],
c.prototype,"popupTemplate",void 0);e([d.property({readOnly:!0,dependsOn:["fields","title"]})],c.prototype,"defaultPopupTemplate",null);e([d.property({type:fa})],c.prototype,"processing",void 0);e([d.property({type:[la],readOnly:!0})],c.prototype,"relationships",void 0);e([d.property({types:t.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],c.prototype,"renderer",null);e([d.reader("service","renderer",
["drawingInfo.renderer","defaultSymbol","type"]),d.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol","layerDefinition.type"])],c.prototype,"readRenderer",null);e([d.writer("renderer")],c.prototype,"writeRenderer",null);e([d.property()],c.prototype,"resourceInfo",void 0);e([d.property({type:Boolean})],c.prototype,"returnM",void 0);e([d.property({type:Boolean})],c.prototype,"returnZ",void 0);e([d.property(k.screenSizePerspectiveEnabled)],c.prototype,"screenSizePerspectiveEnabled",
void 0);e([d.property()],c.prototype,"source",null);e([d.cast("source")],c.prototype,"castSource",null);e([d.reader("portal-item","source",["featureSet"]),d.reader("web-map","source",["featureSet"])],c.prototype,"readSource",null);e([d.property({readOnly:!0,json:{origins:{service:{read:{source:"definitionExpression"}}}}})],c.prototype,"serviceDefinitionExpression",void 0);e([d.property({type:A,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:{source:"layerDefinition.extent.spatialReference"}}})],
c.prototype,"spatialReference",void 0);e([d.property({type:[D]})],c.prototype,"templates",void 0);e([d.reader("templates",["editFieldsInfo","creatorField","editorField","templates"])],c.prototype,"readTemplates",null);e([d.property()],c.prototype,"timeInfo",void 0);e([d.property()],c.prototype,"title",void 0);e([d.reader("service","title",["name"]),d.reader("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],c.prototype,"readTitle",null);e([d.reader("web-map","title",
["layerDefinition.name","title"])],c.prototype,"readTitleFromWebMap",null);e([d.property({type:String})],c.prototype,"sublayerTitleMode",void 0);e([d.property({type:String,json:{read:{source:"timeInfo.trackIdField"}}})],c.prototype,"trackIdField",void 0);e([d.property({json:{read:!1}})],c.prototype,"type",void 0);e([d.property({type:String,readOnly:!0})],c.prototype,"typeIdField",void 0);e([d.reader("service","typeIdField"),d.reader("typeIdField",["layerDefinition.typeIdField"])],c.prototype,"readTypeIdField",
null);e([d.property({type:[E]})],c.prototype,"types",void 0);e([d.reader("service","types",["types"]),d.reader("types",["layerDefinition.types"])],c.prototype,"readTypes",null);e([d.property({type:p.ofType(C.FeatureIndex),readOnly:!0})],c.prototype,"indexes",void 0);e([d.property(k.url)],c.prototype,"url",null);e([d.writer("url")],c.prototype,"writeUrl",null);e([d.property({readOnly:!0})],c.prototype,"userIsAdmin",void 0);e([d.property({json:{origins:{service:{read:!0}},read:!1}})],c.prototype,"version",
void 0);e([d.reader("service","version","currentVersion capabilities drawingInfo hasAttachments htmlPopupType relationships timeInfo typeIdField types".split(" "))],c.prototype,"readVersion",null);e([d.property({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],c.prototype,"visible",void 0);e([d.reader("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],c.prototype,"readVisible",null);e([l(0,d.cast(oa))],c.prototype,"queryAttachments",
null);e([l(0,d.cast(r))],c.prototype,"queryFeatures",null);e([l(0,d.cast(r))],c.prototype,"queryObjectIds",null);e([l(0,d.cast(r))],c.prototype,"queryFeatureCount",null);e([l(0,d.cast(r))],c.prototype,"queryExtent",null);e([l(0,d.cast(qa))],c.prototype,"queryRelatedFeatures",null);return c=e([d.subclass("esri.layers.FeatureLayer")],c)}(d.declared(X,aa,ba,da,ca,Z,U,ea))});