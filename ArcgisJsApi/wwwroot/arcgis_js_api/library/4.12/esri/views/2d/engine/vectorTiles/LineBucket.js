// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.12/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/extendsHelper ../../../../core/has ../../../../symbols/cim/enums ./Bucket ./style/StyleLayer ../webgl/TurboLine ../webgl/mesh/templates/util".split(" "),function(y,z,v,A,p,w,x,r,q){var t=1/3.8;return function(u){function e(a,b,d,c){b=u.call(this,a,b)||this;b._tessellationOptions={};if(a.hasDataDrivenLine!==d.isDataDriven())throw Error("incompatible line buffer");b._lineVertexBuffer=d;b._lineIndexBuffer=c;b._hasPattern=a.getPaintValue("line-pattern",
b.zoom)||a.getPaintValue("line-dasharray",b.zoom);b._isThinLine=a.isThinLine;b._tessellationCallbacks=b._isThinLine?{vertex:b._thinVertex.bind(b),bridge:b._thinBridge.bind(b)}:{vertex:b._thickVertex.bind(b),bridge:b._thickBridge.bind(b)};return b}v(e,u);Object.defineProperty(e.prototype,"lineIndexStart",{get:function(){return this._lineIndexStart},enumerable:!0,configurable:!0});Object.defineProperty(e.prototype,"lineIndexCount",{get:function(){return this._lineIndexCount},enumerable:!0,configurable:!0});
e.prototype.assignBufferInfo=function(a){a._lineIndexStart=this._lineIndexStart;a._lineIndexCount=this._lineIndexCount};e.prototype.processFeatures=function(a,b){this._lineIndexStart=this._lineIndexBuffer.index;this._lineIndexCount=0;b=this.layer;var d=this.zoom,c=b.hasDataDrivenLine;a&&a.setExtent(this.layerExtent);for(var f=[1,1,1,1],e=1,m=1,h=0,k=this._features;h<k.length;h++){var g=k[h],n=new x.LineLayout(b,d,g);!this._hasPattern&&b.hasDataDrivenColor&&(f=b.getPaintValue("line-color",d,g));b.hasDataDrivenOpacity&&
(e=b.getPaintValue("line-opacity",d,g));b.hasDataDrivenWidth&&(m=b.getPaintValue("line-width",d,g));var l=void 0;if(c&&(l={color:f,opacity:e,size:Math.max(Math.min(m,256),0)},0>=l.size||0>=l.opacity||0>=l.color[3]))continue;this._capType=n.cap;this._joinType=n.join;this._miterLimitCosine=q.getLimitCosine(n.miterLimit);this._roundLimitCosine=q.getLimitCosine(n.roundLimit);g=g.getGeometry(a);this._processFeature(n,g,l)}};e.prototype._processFeature=function(a,b,d){if(b)for(var c=b.length,f=0;f<c;f++)this._processGeometry(b[f],
a,d)};e.prototype._processGeometry=function(a,b,d){if(!(2>a.length)){b=a[0];for(var c=1,f,e;c<a.length;)f=a[c].x-b.x,e=a[c].y-b.y,1E-6>f*f+e*e?a.splice(c,1):(b=a[c],++c);2>a.length||(b=this._lineIndexBuffer.index,this._tessellationOptions.trackDistance=this._hasPattern,this._tessellationOptions.initialDistance=0,this._tessellationOptions.thin=this._isThinLine,this._tessellationOptions.wrapDistance=65535,this._tessellationOptions.outerBisectorAutoSplitThreshold=t,this._tessellationOptions.enableOuterBisectorSplit=
this._hasPattern,this._tessellationOptions.innerBisectorAutoSplitThreshold=t,this._tessellationOptions.enableInnerBisectorSplit=this._hasPattern,this._ddValues=d,r.tessellate(a,this._tessellationOptions,this._tessellationCallbacks),this._lineIndexCount+=3*(this._lineIndexBuffer.index-b))}};e.prototype._thinVertex=function(a){a.entry0=this._lineVertexBuffer.index;this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x,a.prevNormal.y,0,-1,a.distance,this._ddValues);a.entry2=this._lineVertexBuffer.index;
this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x,-a.prevNormal.y,0,1,a.distance,this._ddValues);a.exit0=this._lineVertexBuffer.index;this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.nextNormal.x,a.nextNormal.y,0,-1,a.distance,this._ddValues);a.exit2=this._lineVertexBuffer.index;this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.nextNormal.x,-a.nextNormal.y,0,1,a.distance,this._ddValues)};e.prototype._thinBridge=function(a){this._lineIndexBuffer.add(a.leftExit0,
a.rightEntry0,a.leftExit2);this._lineIndexBuffer.add(a.rightEntry0,a.rightEntry2,a.leftExit2)};e.prototype._thickVertex=function(a){var b=this._joinType===p.JoinType.MITER?this._miterLimitCosine:this._roundLimitCosine,d=a.isCap&&this._capType!==p.CapType.BUTT,c=!1;.97<a.cosine?(a.exit0=a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,this._ddValues),a.exit2=a.entry2=this._lineVertexBuffer.index,
this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,this._ddValues)):a.cosine<1-.97?(a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x,a.prevNormal.y,0,-1,a.distance,this._ddValues),a.entry2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x,-a.prevNormal.y,0,1,a.distance,this._ddValues),a.exit0=this._lineVertexBuffer.index,
this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.nextNormal.x,a.nextNormal.y,0,-1,a.distance,this._ddValues),a.exit2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.nextNormal.x,-a.nextNormal.y,0,1,a.distance,this._ddValues)):a.canSplit?(r.splitVertex(),0<a.sign?(a.splitInner?(a.exit0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.leftInner.x,a.leftInner.y,0,-1,a.distance,this._ddValues),
a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.rightInner.x,a.rightInner.y,0,-1,a.distance,this._ddValues)):(a.exit0=a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,this._ddValues)),a.cosine<b?(c=!a.isCap,a.entry2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x,-a.prevNormal.y,
0,1,a.distance,this._ddValues),a.exit2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.nextNormal.x,-a.nextNormal.y,0,1,a.distance,this._ddValues)):a.splitOuter?(c=c||a.gapOuter,a.entry2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.leftOuter.x,-a.leftOuter.y,0,1,a.distance,this._ddValues),a.exit2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.rightOuter.x,
-a.rightOuter.y,0,1,a.distance,this._ddValues)):(a.entry2=a.exit2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,this._ddValues))):(a.splitInner?(a.exit2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.leftInner.x,-a.leftInner.y,0,1,a.distance,this._ddValues),a.entry2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,
-a.rightInner.x,-a.rightInner.y,0,1,a.distance,this._ddValues)):(a.exit2=a.entry2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,this._ddValues)),a.cosine<b?(c=!a.isCap,a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x,a.prevNormal.y,0,-1,a.distance,this._ddValues),a.exit0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,a.nextNormal.x,a.nextNormal.y,0,-1,a.distance,this._ddValues)):a.splitOuter?(c=c||a.gapOuter,a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.leftOuter.x,a.leftOuter.y,0,-1,a.distance,this._ddValues),a.exit0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.rightOuter.x,a.rightOuter.y,0,-1,a.distance,this._ddValues)):(a.exit0=a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,this._ddValues)))):0<a.sign?(a.exit0=a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,0,-1,a.distance,this._ddValues),a.cosine<b?(c=!a.isCap,a.entry2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x,-a.prevNormal.y,0,1,a.distance,this._ddValues),a.exit2=this._lineVertexBuffer.index,
this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.nextNormal.x,-a.nextNormal.y,0,1,a.distance,this._ddValues)):(a.entry2=a.exit2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,this._ddValues))):(a.exit2=a.entry2=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.bisector.x/a.cosine,-a.bisector.y/a.cosine,0,1,a.distance,this._ddValues),
a.cosine<b?(c=!a.isCap,a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x,a.prevNormal.y,0,-1,a.distance,this._ddValues),a.exit0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.nextNormal.x,a.nextNormal.y,0,-1,a.distance,this._ddValues)):(a.exit0=a.entry0=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.bisector.x/a.cosine,a.bisector.y/a.cosine,
0,-1,a.distance,this._ddValues)));a.canSplit&&(a.splitInner||a.splitOuter)||c||d?(b=a.entry1=a.exit1=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,0,0,0,0,a.distance,this._ddValues)):b=a.entry1=a.exit1=null;if(c&&this._joinType!==p.JoinType.ROUND)this._lineIndexBuffer.add(b,0<a.sign?a.exit2:a.entry0,0<a.sign?a.entry2:a.exit0);else if(d&&this._capType===p.CapType.ROUND||c&&this._joinType===p.JoinType.ROUND){var f=c=d=void 0,e=void 0,m=void 0,h=void 0;if(a.isCap){var k=
Math.PI,m=Math.ceil(k/.8),h=k/m;a.isFirstVertex?(d=a.prevNormal.x,c=a.prevNormal.y,f=a.entry0,e=a.entry2):a.isLastVertex&&(d=-a.nextNormal.x,c=-a.nextNormal.y,f=a.exit2,e=a.exit0)}else k=2*Math.acos(a.cosine),m=Math.ceil(k/.8),h=k/m,d=0<a.sign?-a.prevNormal.x:a.nextNormal.x,c=0<a.sign?-a.prevNormal.y:a.nextNormal.y,f=0<a.sign?a.entry2:a.exit0,e=0<a.sign?a.exit2:a.entry0;for(var k=Math.cos(h),h=Math.sin(h),g=h*d+k*c,d=k*d-h*c,c=g,n=void 0,g=void 0,l=0;l<m;++l){n=g;if(l<m-1)if(a.isCap){var q=a.isFirstVertex?
-1:1,g=this._lineVertexBuffer.index;this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,d,c,q,0,a.distance,this._ddValues)}else g=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,d,c,0,a.sign,a.distance,this._ddValues);this._lineIndexBuffer.add(0===l?f:n,b,l===m-1?e:g);n=h*d+k*c;d=k*d-h*c;c=n}}else d&&this._capType===p.CapType.SQUARE&&(d=a.isFirstVertex?1:-1,f=c=void 0,this._hasPattern?(c=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,
a.currentVertex.y,a.prevNormal.x-d*a.inbound.x,a.prevNormal.y-d*a.inbound.y,-d,-1,a.distance,this._ddValues),f=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x-d*a.inbound.x,-a.prevNormal.y-d*a.inbound.y,-d,1,a.distance,this._ddValues)):(c=this._lineVertexBuffer.index,this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,a.prevNormal.x-d*a.inbound.x,a.prevNormal.y-d*a.inbound.y,0,-1,a.distance,this._ddValues),f=this._lineVertexBuffer.index,
this._lineVertexBuffer.add(a.currentVertex.x,a.currentVertex.y,-a.prevNormal.x-d*a.inbound.x,-a.prevNormal.y-d*a.inbound.y,0,1,a.distance,this._ddValues)),0<d?(this._lineIndexBuffer.add(b,a.entry2,f),this._lineIndexBuffer.add(b,f,c),this._lineIndexBuffer.add(b,c,a.entry0)):(this._lineIndexBuffer.add(b,f,a.exit2),this._lineIndexBuffer.add(b,c,f),this._lineIndexBuffer.add(b,a.exit0,c)))};e.prototype._thickBridge=function(a){this._lineIndexBuffer.add(a.leftExit0,a.rightEntry0,null!=a.leftExit1?a.leftExit1:
a.leftExit2);this._lineIndexBuffer.add(a.rightEntry0,null!=a.rightEntry1?a.rightEntry1:a.rightEntry2,null!=a.leftExit1?a.leftExit1:a.leftExit2);null!=a.leftExit1&&null!=a.rightEntry1?(this._lineIndexBuffer.add(a.leftExit1,a.rightEntry1,a.leftExit2),this._lineIndexBuffer.add(a.rightEntry1,a.rightEntry2,a.leftExit2)):null!=a.leftExit1?this._lineIndexBuffer.add(a.leftExit1,a.rightEntry2,a.leftExit2):null!=a.rightEntry1&&this._lineIndexBuffer.add(a.rightEntry1,a.rightEntry2,a.leftExit2)};return e}(w)});