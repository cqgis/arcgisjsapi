// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.12/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/generatorHelper ../../../../core/tsSupport/awaiterHelper ../../../../core/Error ../../../../core/Logger ../../../../core/maybe ../../../../core/promiseUtils ../../../webgl ./definitions ./Utils ./util/debug".split(" "),function(m,n,u,v,p,w,e,x,q,f,r,t){Object.defineProperty(n,"__esModule",{value:!0});var l=w.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),y=t.createDebugLogger(t.DEBUG_ATTR_UPDATES,l),z=function(){function d(a,b,c){this.texelSize=
4;var g=r.getPixelArrayCtor(b);this.pixelType=b;this.size=c;this.data=new g(a);this._resetRange()}d.prototype.destroy=function(){e.andThen(this._texture,function(a){return a.dispose()})};d.prototype.setData=function(a,b,c){this.data[a*this.texelSize+b]=c;this.dirtyStart=Math.min(this.dirtyStart,a);this.dirtyEnd=Math.max(this.dirtyEnd,a)};d.prototype.getData=function(a,b){return this.data[a*this.texelSize+b]};d.prototype.getTexture=function(a){var b=this;return e.unwrapOr(this._texture,function(){return b._initTexture(a)})};
d.prototype.updateTexture=function(a){var b=this.dirtyStart,c=this.dirtyEnd;if(!(b>c)){this._resetRange();a=this.getTexture(a);var b=(b-b%this.size)/this.size,c=(c-c%this.size)/this.size,g=b*this.size*4,e=4*(this.size+c*this.size)-g,d=r.getPixelArrayCtor(this.pixelType),g=new d(this.data.buffer,g*d.BYTES_PER_ELEMENT,e),e=this.size,c=c-b+1;c>this.size?l.error(p("mapview-webgl","Out-of-bounds index when updating AttributeData")):a.updateData(0,0,b,e,c,g)}};d.prototype.update=function(a,b){a=b.data;
var c=b.start,d=b.end;if(e.isSome(a))for(var f=this.data,h=c*this.texelSize,k=0;k<a.length;k++)b.layout&1<<k%this.texelSize&&(f[h+k]=a[k]);this.dirtyStart=Math.min(this.dirtyStart,c);this.dirtyEnd=Math.max(this.dirtyEnd,d)};d.prototype._resetRange=function(){this.dirtyStart=this.data.length/4;this.dirtyEnd=0};d.prototype._initTexture=function(a){return this._texture=new q.Texture(a,{wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size},this.data)};
return d}();m=function(){function d(){this._initialized=!1}d.prototype.initialize=function(a){var b=a.blocks,c=a.size;this.shared=a.shared;this.size=c;e.andThen(this._data,function(a){return e.mapMany(a,function(a){return a.destroy()})});this._data=e.mapMany(b,function(a){return new z(a.buffer,a.pixelType,c)});this._initialized=!0};d.prototype.destroy=function(){e.andThen(this._data,function(a){return e.mapMany(a,function(a){return a.destroy()})});e.andThen(this._defaultTexture,function(a){return a.dispose()})};
d.prototype.setLabelMinZoom=function(a,b){this.setData(a,0,1,b)};d.prototype.getLabelMinZoom=function(a){return this.getData(a,0,1)};d.prototype.getFilterFlags=function(a){return this.getData(a,0,0)};d.prototype.getVVSize=function(a){return this.getData(a,1,0)};d.prototype.getData=function(a,b,c){b=e.expect(this._data)[b];return e.isNone(b)?0:b.getData(a,c)};d.prototype.setData=function(a,b,c,d){b=e.expect(this._data)[b];e.expect(b).setData(a,c,d)};d.prototype.requestUpdate=function(a){return v(this,
void 0,void 0,function(){var b;return u(this,function(c){if(this._pendingAttributeUpdate)return l.error(p("mapview-webgl","Tried to update attribute data with a pending update")),[2];b=x.createResolver();this._pendingAttributeUpdate={data:a,resolver:b};return[2,b.promise]})})};d.prototype.update=function(a){if(this._initialized&&e.isSome(this._pendingAttributeUpdate)){for(var b=this._pendingAttributeUpdate,c=b.data,b=b.resolver,d=e.expect(this._data),f=function(b){var g=c.blocks[b];e.andThen(d[b],
function(d){return e.andThen(g,function(c){y("Updating block "+b,c);d.update(a,c)})})},h=0;h<c.blocks.length;h++)f(h);this._pendingAttributeUpdate=null;b()}};d.prototype.bindTextures=function(a){var b=this._getDefaultTexture(a);if(this._initialized){var c=e.expect(this._data);e.forEachSome(c,function(b){return b.updateTexture(a)});a.bindTexture(e.mapOr(c[0],b,function(b){return b.getTexture(a)}),f.TEXTURE_BINDING_ATTRIBUTE_DATA_0);a.bindTexture(e.mapOr(c[1],b,function(b){return b.getTexture(a)}),
f.TEXTURE_BINDING_ATTRIBUTE_DATA_1);a.bindTexture(e.mapOr(c[2],b,function(b){return b.getTexture(a)}),f.TEXTURE_BINDING_ATTRIBUTE_DATA_2)}else a.bindTexture(b,f.TEXTURE_BINDING_ATTRIBUTE_DATA_0),a.bindTexture(b,f.TEXTURE_BINDING_ATTRIBUTE_DATA_1),a.bindTexture(b,f.TEXTURE_BINDING_ATTRIBUTE_DATA_2)};d.prototype._getDefaultTexture=function(a){e.isNone(this._defaultTexture)&&(this._defaultTexture=new q.Texture(a,{wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1},new Uint8Array(4)));
return this._defaultTexture};return d}();n.AttributeStoreView=m});