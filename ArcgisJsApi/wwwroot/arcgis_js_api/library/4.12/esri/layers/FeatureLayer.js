// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.12/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/paramHelper ../core/tsSupport/generatorHelper ../core/tsSupport/awaiterHelper ../PopupTemplate ../renderers ../request ../symbols ../core/asyncUtils ../core/Collection ../core/Error ../core/Handles ../core/jsonMap ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators ../geometry/Extent ../geometry/HeightModelInfo ../geometry/SpatialReference ./Layer ./graphics/editingSupport ./graphics/sources/MemorySource ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/arcgisLayerUrl ./support/commonProperties ./support/FeatureIndex ./support/FeatureProcessing ./support/FeatureReduction ./support/FeatureReductionSelection ./support/FeatureTemplate ./support/FeatureType ./support/fieldProperties ./support/FieldsIndex ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ./support/layerSourceUtils ./support/Relationship ../renderers/support/jsonUtils ../renderers/support/styleUtils ../support/popupUtils ../symbols/support/jsonUtils ../tasks/support/AttachmentQuery ../tasks/support/FeatureSet ../tasks/support/Query ../tasks/support/RelationshipQuery".split(" "),
function(v,sa,z,L,e,ta,r,t,M,l,N,w,O,n,g,P,Q,R,S,T,h,A,d,U,V,B,W,X,C,Y,Z,aa,ba,ca,da,p,m,D,ea,fa,ga,E,F,ha,ia,u,ja,G,ka,la,x,ma,na,y,oa,pa,q,qa){function f(d,b,a){return!(d&&d.hasOwnProperty(b)?!d[b]:!a)}var I=new Q.default({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"}),ra={name:"supportsName",size:"supportsSize",contentType:"supportsContentType",keywords:"supportsKeywords",exifInfo:"supportsExifInfo"},
J=R.getLogger("esri.layers.FeatureLayer"),K=ha.defineFieldProperties();return function(H){function b(a){a=H.call(this)||this;a._handles=new P;a.capabilities=null;a.copyright=null;a.displayField=null;a.definitionExpression=null;a.dynamicDataSource=null;a.editFieldsInfo=null;a.editingEnabled=!0;a.editingInfo=null;a.elevationInfo=null;a.featureReduction=null;a.fields=null;a.fullExtent=null;a.gdbVersion=null;a.geometryProperties=null;a.geometryType=null;a.hasM=void 0;a.hasZ=void 0;a.heightModelInfo=null;
a.historicMoment=null;a.isTable=!1;a.labelsVisible=!0;a.labelingInfo=null;a.layerId=void 0;a.legendEnabled=!0;a.maxRecordCount=void 0;a.tileMaxRecordCount=void 0;a.minScale=0;a.maxScale=0;a.objectIdField=null;a.outFields=null;a.path=null;a.popupEnabled=!0;a.popupTemplate=null;a.relationships=null;a.returnM=void 0;a.returnZ=void 0;a.screenSizePerspectiveEnabled=!0;a.serviceDefinitionExpression=null;a.spatialReference=B.WGS84;a.templates=null;a.timeInfo=null;a.title=null;a.sublayerTitleMode="item-title";
a.trackIdField=null;a.type="feature";a.typeIdField=null;a.types=null;a.indexes=new (n.ofType(D.FeatureIndex));a.userIsAdmin=!1;a.version=void 0;a.visible=!0;return a}L(b,H);b.prototype.destroy=function(){this._handles&&(this._handles.destroy(),this._handles=null)};b.prototype.normalizeCtorArgs=function(a,c){return"string"===typeof a?z({url:a},c):a};b.prototype.load=function(a){var c=this,b=S.isSome(a)?a.signal:null;if(this.portalItem&&this.portalItem.loaded&&this.source)this.addResolvingPromise(this.createGraphicsSource(b).then(function(a){return c._initLayerProperties(a)}));
else return a=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection"]},a).catch(function(a){return a}).then(function(){return t(c,void 0,void 0,function(){var a,c;return r(this,function(k){switch(k.label){case 0:return this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)?[4,this._fetchFirstLayerId(b)]:[3,2];case 1:a=k.sent(),null!=a&&(this.layerId=a),k.label=2;case 2:if(!this.url&&!this._hasMemorySource())throw new g("feature-layer:missing-url-or-source",
"Feature layer must be created with either a url or a source");c=this._initLayerProperties;return[4,this.createGraphicsSource(b)];case 3:return[2,c.apply(this,[k.sent()])]}})})}),this.addResolvingPromise(a),this.when()};b.prototype.readCapabilities=function(a,c){c=c.layerDefinition||c;return{attachment:this._readAttachmentCapabilities(c.attachmentProperties),data:this._readDataCapabilities(c),metadata:this._readMetadataCapabilities(c),operations:this._readOperationsCapabilities(c.capabilities||a,
c),query:this._readQueryCapabilities(c),queryRelated:this._readQueryRelatedCapabilities(c),editing:this._readEditingCapabilities(c)}};b.prototype.readEditingEnabled=function(a,c){return"Query"===c.capabilities?!1:!0};b.prototype.writeEditingEnabled=function(a,c,b,d){a||(c.capabilities="Query")};b.prototype.readEditingInfo=function(a,c){return(a=c.editingInfo)?{lastEditDate:null!=a.lastEditDate?new Date(a.lastEditDate):null}:null};Object.defineProperty(b.prototype,"fieldsIndex",{get:function(){return new ia((this.fields?
this.fields:[]).concat(this.processing&&this.processing.fields?this.processing.fields:[]))},enumerable:!0,configurable:!0});b.prototype.readIsTable=function(a,c){c=c&&c.layerDefinition||c;return"Table"===c.type};Object.defineProperty(b.prototype,"hasService",{get:function(){return!this._hasMemorySource()},enumerable:!0,configurable:!0});b.prototype.readMinScale=function(a,c){return c.effectiveMinScale||a||0};b.prototype.readMaxScale=function(a,c){return c.effectiveMaxScale||a||0};b.prototype.readObjectIdFieldFromService=
function(a,c){c=c.layerDefinition||c;if(c.objectIdField)return c.objectIdField;if(c.fields)for(a=0,c=c.fields;a<c.length;a++){var b=c[a];if("esriFieldTypeOID"===b.type)return b.name}};Object.defineProperty(b.prototype,"parsedUrl",{get:function(){var a=this.url?A.urlToObject(this.url):null;if(null!=a)if(null!=this.layerId)a.path=A.join(a.path,this.layerId.toString());else if(null!=this.dynamicDataSource){var c={source:ka.sourceToJSON(this.dynamicDataSource)};a.query={layer:JSON.stringify(c)}}return a},
enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"renderer",{set:function(a){u.fixRendererFields(a,this.fields);this._set("renderer",a)},enumerable:!0,configurable:!0});b.prototype.readRenderer=function(a,c,b){c=c.layerDefinition||c;var k=c.drawingInfo&&c.drawingInfo.renderer||void 0,d,e;if(k)(d=x.read(k,c,b)||void 0)||J.error("Failed to create renderer",
{rendererDefinition:c.drawingInfo.renderer,layer:this,context:b});else if(c.defaultSymbol)y.read(c.defaultSymbol,c,b),c.types&&c.types.length?(d=new l.UniqueValueRenderer({defaultSymbol:e,field:c.typeIdField}),c.types.forEach(function(a){k.addUniqueValueInfo(a.id,y.read(a.symbol,a,b))})):d=new l.SimpleRenderer({symbol:e});else if("Table"!==c.type){switch(c.geometryType){case "esriGeometryPoint":case "esriGeometryMultipoint":e=new w.SimpleMarkerSymbol;break;case "esriGeometryPolyline":e=new w.SimpleLineSymbol;
break;case "esriGeometryPolygon":e=new w.SimpleFillSymbol}d=e&&new l.SimpleRenderer({symbol:e})}return d};b.prototype.writeRenderer=function(a,c,b,d){x.writeTarget(a,c,b,d)};b.prototype.writeWebSceneRenderer=function(a,c,b,d){x.writeTarget(a,c,"layerDefinition.drawingInfo.renderer",d)};Object.defineProperty(b.prototype,"source",{set:function(a){var c=this._get("source");c!==a&&(c&&c&&c.isInstanceOf&&c.isInstanceOf(n)&&this._resetMemorySource(c),a&&a&&a.isInstanceOf&&a.isInstanceOf(n)&&this._initMemorySource(a),
this._set("source",a))},enumerable:!0,configurable:!0});b.prototype.castSource=function(a){return a?Array.isArray(a)||a&&a.isInstanceOf&&a.isInstanceOf(n)?new C.default({layer:this,items:a}):a:null};b.prototype.readSource=function(a,c){a=pa.fromJSON(c.featureSet);return new C.default({layer:this,items:a&&a.features||[]})};b.prototype.readTemplates=function(a,c){var b=c.editFieldsInfo;c=b&&b.creatorField;b=b&&b.editorField;a=a&&a.map(function(a){return E.fromJSON(a)});this._fixTemplates(a,c);this._fixTemplates(a,
b);return a};b.prototype.readTitle=function(a,c){a=c.layerDefinition&&c.layerDefinition.name||c.name;c=c.title||c.layerDefinition&&c.layerDefinition.title;if(a){c=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return this.url?p.titleFromUrlAndName(this.url,a):a;a=a||this.url&&p.parse(this.url).title;if(!a)return;"item-title-and-service-name"===this.sublayerTitleMode&&c&&(a=c+" - "+a);return p.cleanTitle(a)}if("item-title"===this.sublayerTitleMode&&c)return c};b.prototype.readTitleFromWebMap=
function(a,c){return c.title||c.layerDefinition&&c.layerDefinition.name};b.prototype.readTypeIdField=function(a,c){c=c.layerDefinition||c;if(a=c.typeIdField)if(c=u.getField(c.fields,a))a=c.name;return a};b.prototype.readTypes=function(a,c){var b=this;c=c.layerDefinition||c;a=c.types;var d=(c=c.editFieldsInfo)&&c.creatorField,e=c&&c.editorField;return a&&a.map(function(a){a=F.fromJSON(a);b._fixTemplates(a.templates,d);b._fixTemplates(a.templates,e);return a})};Object.defineProperty(b.prototype,"url",
{set:function(a){a=p.sanitizeUrlWithLayerId(this,a,J);this._set("url",a.url);null!=a.layerId&&this._set("layerId",a.layerId)},enumerable:!0,configurable:!0});b.prototype.writeUrl=function(a,c,b,d){p.writeUrlWithLayerId(this,a,null,c,d)};b.prototype.readVersion=function(a,c){return c.currentVersion?c.currentVersion:c.hasOwnProperty("capabilities")||c.hasOwnProperty("drawingInfo")||c.hasOwnProperty("hasAttachments")||c.hasOwnProperty("htmlPopupType")||c.hasOwnProperty("relationships")||c.hasOwnProperty("timeInfo")||
c.hasOwnProperty("typeIdField")||c.hasOwnProperty("types")?10:9.3};b.prototype.readVisible=function(a,c){if(c.layerDefinition&&null!=c.layerDefinition.defaultVisibility)return!!c.layerDefinition.defaultVisibility;if(null!=c.visibility)return!!c.visibility};b.prototype.addAttachment=function(a,c){var b=this;return this.load().then(function(){return b._checkAttachmentSupport(a)}).then(function(){return"addAttachment"in b.source?b.source.addAttachment(a,c):h.reject(new g("FeatureLayer","Layer source does not support addAttachment capability"))})};
b.prototype.updateAttachment=function(a,c,b){var d=this;return this.load().then(function(){return d._checkAttachmentSupport(a)}).then(function(){return"updateAttachment"in d.source?d.source.updateAttachment(a,c,b):h.reject(new g("FeatureLayer","Layer source does not support updateAttachment capability"))})};b.prototype.applyEdits=function(a){return O.safeCast(X.applyEdits(this,a))};b.prototype.on=function(a,c){return this.inherited(arguments)};b.prototype.createPopupTemplate=function(a){return na.createPopupTemplate(this,
a)};b.prototype.createGraphicsSource=function(a){return t(this,void 0,void 0,function(){var c,b;return r(this,function(d){switch(d.label){case 0:return this._hasMemorySource()?(this.emit("graphics-source-create",{graphicsSource:this.source}),[2,this.source.load({signal:a})]):[4,h.create(function(a){return v(["./graphics/sources/FeatureLayerSource"],a)})];case 1:return c=d.sent(),h.throwIfAborted(a),[4,(new c.default({layer:this})).load({signal:a})];case 2:return b=d.sent(),this.emit("graphics-source-create",
{graphicsSource:b}),[2,b]}})})};b.prototype.createQuery=function(){var a=new q,c=this.get("capabilities.data");a.gdbVersion=this.gdbVersion;a.historicMoment=this.historicMoment;a.returnGeometry=!0;c&&(c.supportsZ&&null!=this.returnZ&&(a.returnZ=this.returnZ),c.supportsM&&null!=this.returnM&&(a.returnM=this.returnM));a.outFields=["*"];a.where=this.definitionExpression||"1\x3d1";a.multipatchOption="multipatch"===this.geometryType?"xyFootprint":null;return a};b.prototype.deleteAttachments=function(a,
c){var b=this;return this.load().then(function(){return b._checkAttachmentSupport(a)}).then(function(){return"deleteAttachments"in b.source?b.source.deleteAttachments(a,c):h.reject(new g("FeatureLayer","Layer source does not support deleteAttachments capability"))})};b.prototype.getFeatureType=function(a){var c=this.typeIdField;if(!c||!a)return null;var b=a.attributes?a.attributes[c]:void 0;if(null==b)return null;var d=null;this.types.some(function(a){var c=a.id;if(null==c)return!1;c.toString()===
b.toString()&&(d=a);return!!d});return d};b.prototype.getFieldDomain=function(a,c){var b=this,d,e=!1;c=(c=c&&c.feature)&&c.attributes;var f=this.typeIdField&&c&&c[this.typeIdField];null!=f&&this.types&&(e=this.types.some(function(c){return c.id==f?((d=c.domains&&c.domains[a])&&"inherited"===d.type&&(d=b._getLayerDomain(a)),!0):!1}));e||d||(d=this._getLayerDomain(a));return d};b.prototype.getField=function(a){return this.fieldsIndex.get(a)};b.prototype.queryAttachments=function(a,c){var b=this;a=oa.from(a);
return this.load().then(function(){if(!b.get("capabilities.data.supportsAttachment"))return h.reject(new g("FeatureLayer","this layer doesn't support attachments"));var c=a.attachmentTypes,d=a.objectIds,e=a.globalIds,k=a.num,f=a.size,m=a.start,l=a.where;return!b.get("capabilities.operations.supportsQueryAttachments")&&(c=c&&c.length,e=e&&e.length,f=f&&f.length,d&&1<d.length||c||e||f||k||m||l)?h.reject(new g("FeatureLayer","when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported",
a)):d&&d.length||l?"queryAttachments"in b.source?b.source.queryAttachments(a):h.reject(new g("FeatureLayer","Layer source does not support queryAttachments capability",a)):h.reject(new g("FeatureLayer","'objectIds' or 'where' are required to perform attachment query",a))})};b.prototype.queryFeatures=function(a,c){var b=this;return this.load().then(function(){return b.source.queryFeatures(q.from(a)||b.createQuery(),c)}).then(function(a){if(a&&a.features)for(var c=0,d=a.features;c<d.length;c++){var e=
d[c];e.layer=e.sourceLayer=b}return a})};b.prototype.queryObjectIds=function(a,c){var b=this;return this.load().then(function(){return b.source.queryObjectIds?b.source.queryObjectIds(q.from(a)||b.createQuery(),c):h.reject(new g("FeatureLayer","Layer source does not support queryObjectIds capability"))})};b.prototype.queryFeatureCount=function(a,c){var b=this;return this.load().then(function(){return b.source.queryFeatureCount?b.source.queryFeatureCount(q.from(a)||b.createQuery(),c):h.reject(new g("FeatureLayer",
"Layer source does not support queryFeatureCount capability"))})};b.prototype.queryExtent=function(a,c){var b=this;return this.load().then(function(){return b.source.queryExtent?b.source.queryExtent(q.from(a)||b.createQuery(),c):h.reject(new g("FeatureLayer","Layer source does not support queryExtent capability"))})};b.prototype.queryRelatedFeatures=function(a,c){var b=this;return this.load().then(function(){return"queryRelatedFeatures"in b.source?b.source.queryRelatedFeatures(qa.from(a),c):h.reject(new g("FeatureLayer",
"Layer source does not support queryRelatedFeatures capability"))})};b.prototype.read=function(a,c){var b=a.featureCollection;if(b){var d=b.layers;d&&1===d.length&&(this.inherited(arguments,[d[0],c]),null!=b.showLegend&&this.inherited(arguments,[{showLegend:b.showLegend},c]))}this.inherited(arguments,[a,c]);c&&"service"===c.origin&&this.revert(["objectIdField","fields","timeInfo"],"service")};b.prototype.write=function(a,c){return c&&("web-scene"===c.origin||"web-map"===c.origin)&&c.messages&&this.isTable?
(c.messages.push(new g("layer:unsupported","Layers ("+this.title+", "+this.id+") of type '"+this.declaredClass+"' using a Table source cannot written to web scenes",{layer:this})),null):this.inherited(arguments)};b.prototype.importLayerViewModule=function(a){return t(this,void 0,void 0,function(){return r(this,function(c){switch(a.type){case "2d":return[2,h.create(function(a){return v(["../views/2d/layers/FeatureLayerView2D"],a)})];case "3d":return[2,h.create(function(a){return v(["../views/3d/layers/FeatureLayerView3D"],
a)})]}return[2]})})};b.prototype._checkAttachmentSupport=function(a){var c=a.attributes,b=this.objectIdField;if(!this.get("capabilities.data.supportsAttachment"))return h.reject(new g("FeatureLayer","this layer doesn't support attachments"));if(!a)return h.reject(new g("FeatureLayer","A feature is required to add/delete/update attachments"));if(!c)return h.reject(new g("FeatureLayer","'attributes' are required on a feature to query attachments"));if(!c[b])return h.reject(new g("FeatureLayer","feature is missing the identifying attribute "+
b))};b.prototype._getLayerDomain=function(a){if(!this.fields)return null;var c=null;this.fields.some(function(b){b.name===a&&(c=b.domain);return!!c});return c};b.prototype._fetchFirstLayerId=function(a){return N(this.url,{query:{f:"json"},responseType:"json",signal:a}).then(function(a){if(a=a.data){if(Array.isArray(a.layers)&&0<a.layers.length)return a.layers[0].id;if(Array.isArray(a.tables)&&0<a.tables.length)return a.tables[0].id}})};b.prototype._initLayerProperties=function(a){return t(this,void 0,
void 0,function(){return r(this,function(c){this._set("source",a);a.layerDefinition&&this.read(a.layerDefinition,{origin:"service",url:this.parsedUrl});this._verifySource();this._verifyFields();u.fixRendererFields(this.renderer,this.fields);u.fixTimeInfoFields(this.timeInfo,this.fields);return[2,ma.loadStyleRenderer(this,{origin:"service"})]})})};b.prototype._verifyFields=function(){var a=this.parsedUrl&&this.parsedUrl.path||"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+
a+")");this.isTable||this._hasMemorySource()||-1!==a.search(/\/FeatureServer\//i)||this.fields&&this.fields.some(function(a){return"geometry"===a.type})||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+a+")")};b.prototype._fixTemplates=function(a,c){a&&a.forEach(function(a){(a=a.prototype&&a.prototype.attributes)&&c&&delete a[c]})};b.prototype._verifySource=function(){if(this._hasMemorySource()){if(this.url)throw new g("feature-layer:mixed-source-and-url",
"FeatureLayer cannot be created with both an in-memory source and a url");}else if(!this.url)throw new g("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source");};b.prototype._initMemorySource=function(a){var c=this;a.forEach(function(a){a.layer=c;a.sourceLayer=c});this._handles.add([a.on("after-add",function(a){a.item.layer=c;a.item.sourceLayer=c}),a.on("after-remove",function(a){a.item.layer=null;a.item.sourceLayer=null})],"fl-source")};b.prototype._resetMemorySource=
function(a){a.forEach(function(a){a.layer=null;a.sourceLayer=null});this._handles.remove("fl-source")};b.prototype._hasMemorySource=function(){return!(this.url||!this.source)};b.prototype._readAttachmentCapabilities=function(a){var c={supportsName:!1,supportsSize:!1,supportsContentType:!1,supportsKeywords:!1,supportsExifInfo:!1};a&&Array.isArray(a)&&a.forEach(function(a){var b=ra[a.name];b&&(c[b]=!!a.isEnabled)});return c};b.prototype._readDataCapabilities=function(a){return{supportsAttachment:f(a,
"hasAttachments",!1),supportsM:f(a,"hasM",!1),supportsZ:f(a,"hasZ",!1)}};b.prototype._readMetadataCapabilities=function(a){return{supportsAdvancedFieldProperties:f(a,"supportsFieldDescriptionProperty",!1)}};b.prototype._readOperationsCapabilities=function(a,c){a=a?a.toLowerCase().split(",").map(function(a){return a.trim()}):[];var b=-1!==a.indexOf("editing"),d=b&&-1!==a.indexOf("create"),e=b&&-1!==a.indexOf("delete"),g=b&&-1!==a.indexOf("update");!b||d||e||g||(d=e=g=!0);return{supportsCalculate:f(c,
"supportsCalculate",!1),supportsTruncate:f(c,"supportsTruncate",!1),supportsValidateSql:f(c,"supportsValidateSql",!1),supportsAdd:d,supportsDelete:e,supportsEditing:b,supportsQuery:-1!==a.indexOf("query"),supportsQueryAttachments:f(c.advancedQueryCapabilities,"supportsQueryAttachments",!1),supportsResizeAttachments:f(c,"supportsAttachmentsResizing",!1),supportsUpdate:g,supportsExceedsLimitStatistics:f(c,"supportsExceedsLimitStatistics",!1)}};b.prototype._readQueryCapabilities=function(a){var c=a.advancedQueryCapabilities,
b=a.ownershipBasedAccessControlForFeatures,d=a.archivingInfo,e=(a.supportedQueryFormats||"").split(",").reduce(function(a,b){(b=b.toLowerCase().trim())&&a.add(b);return a},new Set);return{supportsStatistics:f(c,"supportsStatistics",a.supportsStatistics),supportsCentroid:f(c,"supportsReturningGeometryCentroid",!1),supportsDistance:f(c,"supportsQueryWithDistance",!1),supportsDistinct:f(c,"supportsDistinct",a.supportsAdvancedQueries),supportsExtent:f(c,"supportsReturningQueryExtent",!1),supportsGeometryProperties:f(c,
"supportsReturningGeometryProperties",!1),supportsHavingClause:f(c,"supportsHavingClause",!1),supportsOrderBy:f(c,"supportsOrderBy",a.supportsAdvancedQueries),supportsPagination:f(c,"supportsPagination",!1),supportsQuantization:f(a,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:f(a,"supportsQuantizationEditMode",!1),supportsQueryGeometry:f(a,"supportsReturningQueryGeometry",!1),supportsResultType:f(c,"supportsQueryWithResultType",!1),supportsMaxRecordCountFactor:f(c,"supportsMaxRecordCountFactor",
!1),supportsSqlExpression:f(c,"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:f(a,"useStandardizedQueries",!1),supportsQueryByOthers:f(b,"allowOthersToQuery",!0),supportsHistoricMoment:f(d,"supportsQueryWithHistoricMoment",!1),supportsFormatPBF:e.has("pbf"),supportsDisjointSpatialRelationship:f(c,"supportsDisjointSpatialRel",!1),supportsCacheHint:f(c,"supportsQueryWithCacheHint",!1)}};b.prototype._readQueryRelatedCapabilities=function(a){a=a.advancedQueryCapabilities;var b=f(a,"supportsAdvancedQueryRelated",
!1);return{supportsPagination:f(a,"supportsQueryRelatedPagination",!1),supportsCount:b,supportsOrderBy:b}};b.prototype._readEditingCapabilities=function(a){var b=a.ownershipBasedAccessControlForFeatures;return{supportsGeometryUpdate:f(a,"allowGeometryUpdates",!0),supportsGlobalId:f(a,"supportsApplyEditsWithGlobalIds",!1),supportsRollbackOnFailure:f(a,"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:f(a,"allowUpdateWithoutMValues",!1),supportsUploadWithItemId:f(a,"supportsAttachmentsByUploadId",
!1),supportsDeleteByAnonymous:f(b,"allowAnonymousToDelete",!0),supportsDeleteByOthers:f(b,"allowOthersToDelete",!0),supportsUpdateByAnonymous:f(b,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:f(b,"allowOthersToUpdate",!0)}};e([d.property({readOnly:!0,json:{read:!1}})],b.prototype,"capabilities",void 0);e([d.reader("service","capabilities","advancedQueryCapabilities allowGeometryUpdates allowUpdateWithoutMValues archivingInfo capabilities hasAttachments hasM hasZ ownershipBasedAccessControlForFeatures supportedQueryFormats supportsAdvancedQueries supportsApplyEditsWithGlobalIds supportsAttachmentsByUploadId supportsAttachmentsResizing supportsCalculate supportsCoordinatesQuantization supportsExceedsLimitStatistics supportsFieldDescriptionProperty supportsQuantizationEditMode supportsRollbackOnFailureParameter supportsStatistics supportsTruncate supportsValidateSql useStandardizedQueries".split(" "))],
b.prototype,"readCapabilities",null);e([d.property({type:String,json:{read:{source:"layerDefinition.copyrightText"},origins:{service:{read:{source:"copyrightText"}}}}})],b.prototype,"copyright",void 0);e([d.property({type:String,json:{read:{source:"layerDefinition.displayField"},origins:{service:{read:{source:"displayField"}}}}})],b.prototype,"displayField",void 0);e([d.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],
b.prototype,"definitionExpression",void 0);e([d.property({readOnly:!0,json:{read:y.read}})],b.prototype,"defaultSymbol",void 0);e([d.property()],b.prototype,"dynamicDataSource",void 0);e([d.property({readOnly:!0})],b.prototype,"editFieldsInfo",void 0);e([d.property({type:Boolean})],b.prototype,"editingEnabled",void 0);e([d.reader(["portal-item","web-map","web-scene"],"editingEnabled",["capabilities"])],b.prototype,"readEditingEnabled",null);e([d.writer(["portal-item","web-map","web-scene"],"editingEnabled",
{capabilities:{type:String}})],b.prototype,"writeEditingEnabled",null);e([d.property({readOnly:!0})],b.prototype,"editingInfo",void 0);e([d.reader("editingInfo")],b.prototype,"readEditingInfo",null);e([d.property(m.elevationInfo)],b.prototype,"elevationInfo",void 0);e([d.property({types:{key:"type",base:fa.default,typeMap:{selection:ga.default}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],b.prototype,"featureReduction",
void 0);e([d.property(z({},K.fields,{json:{origins:{service:{read:!0}},read:{source:"layerDefinition.fields"}}}))],b.prototype,"fields",void 0);e([d.property({readOnly:!0,dependsOn:["fields","processing"]})],b.prototype,"fieldsIndex",null);e([d.property({type:U,json:{origins:{service:{read:{source:"extent"}}},read:{source:"layerDefinition.extent"}}})],b.prototype,"fullExtent",void 0);e([d.property()],b.prototype,"gdbVersion",void 0);e([d.property({readOnly:!0})],b.prototype,"geometryProperties",void 0);
e([d.property({type:"point polygon polyline multipoint multipatch mesh".split(" "),json:{origins:{service:{read:I.read}},read:{source:"layerDefinition.geometryType",reader:I.read}}})],b.prototype,"geometryType",void 0);e([d.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasM"}}})],b.prototype,"hasM",void 0);e([d.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasZ"}}})],b.prototype,"hasZ",void 0);e([d.property({readOnly:!0,
type:V})],b.prototype,"heightModelInfo",void 0);e([d.property({type:Date})],b.prototype,"historicMoment",void 0);e([d.property({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],b.prototype,"id",void 0);e([d.property({readOnly:!0})],b.prototype,"isTable",void 0);e([d.reader("service","isTable",["type"]),d.reader("isTable",["layerDefinition.type"])],b.prototype,"readIsTable",null);e([d.property({dependsOn:["loaded","url","source"],readOnly:!0})],b.prototype,"hasService",null);e([d.property(m.labelsVisible)],
b.prototype,"labelsVisible",void 0);e([d.property({type:[ja],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:G.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:G.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],b.prototype,"labelingInfo",void 0);e([d.property({type:Number,json:{origins:{service:{read:{source:"id"}}},read:!1}})],b.prototype,"layerId",void 0);e([d.property(m.legendEnabled)],
b.prototype,"legendEnabled",void 0);e([d.property({type:["show","hide"]})],b.prototype,"listMode",void 0);e([d.property({type:Number,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.maxRecordCount"}}})],b.prototype,"maxRecordCount",void 0);e([d.property({type:Number,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.tileMaxRecordCount"}}})],b.prototype,"tileMaxRecordCount",void 0);e([d.property({type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.minScale"},
write:{target:"layerDefinition.minScale"}}})],b.prototype,"minScale",void 0);e([d.reader("service","minScale",["minScale","effectiveMinScale"])],b.prototype,"readMinScale",null);e([d.property({type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.maxScale"},write:{target:"layerDefinition.maxScale"}}})],b.prototype,"maxScale",void 0);e([d.reader("service","maxScale",["maxScale","effectiveMaxScale"])],b.prototype,"readMaxScale",null);e([d.property({type:String})],b.prototype,
"objectIdField",void 0);e([d.reader("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"]),d.reader("service","objectIdField",["objectIdField","fields"])],b.prototype,"readObjectIdFieldFromService",null);e([d.property({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],b.prototype,"operationalLayerType",void 0);e([d.property(K.outFields)],b.prototype,"outFields",void 0);e([d.property({readOnly:!0,dependsOn:["layerId"]})],b.prototype,"parsedUrl",null);e([d.property({type:String,
json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],b.prototype,"path",void 0);e([d.property(m.popupEnabled)],b.prototype,"popupEnabled",void 0);e([d.property({type:M,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],b.prototype,"popupTemplate",void 0);e([d.property({readOnly:!0,dependsOn:["fields","title"]})],b.prototype,"defaultPopupTemplate",null);e([d.property({type:ea})],b.prototype,"processing",void 0);e([d.property({type:[la],readOnly:!0})],b.prototype,"relationships",void 0);
e([d.property({types:l.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],b.prototype,"renderer",null);e([d.reader("service","renderer",["drawingInfo.renderer","defaultSymbol","type"]),d.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol","layerDefinition.type"])],b.prototype,"readRenderer",null);e([d.writer("renderer")],b.prototype,"writeRenderer",null);e([d.writer("web-scene",
"renderer",{"layerDefinition.drawingInfo.renderer":{types:l.webSceneRendererTypes}})],b.prototype,"writeWebSceneRenderer",null);e([d.property()],b.prototype,"resourceInfo",void 0);e([d.property({type:Boolean})],b.prototype,"returnM",void 0);e([d.property({type:Boolean})],b.prototype,"returnZ",void 0);e([d.property(m.screenSizePerspectiveEnabled)],b.prototype,"screenSizePerspectiveEnabled",void 0);e([d.property()],b.prototype,"source",null);e([d.cast("source")],b.prototype,"castSource",null);e([d.reader("portal-item",
"source",["featureSet"]),d.reader("web-map","source",["featureSet"])],b.prototype,"readSource",null);e([d.property({readOnly:!0,json:{origins:{service:{read:{source:"definitionExpression"}}}}})],b.prototype,"serviceDefinitionExpression",void 0);e([d.property({type:B,json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:{source:"layerDefinition.extent.spatialReference"}}})],b.prototype,"spatialReference",void 0);e([d.property({type:[E]})],b.prototype,"templates",void 0);e([d.reader("templates",
["editFieldsInfo","creatorField","editorField","templates"])],b.prototype,"readTemplates",null);e([d.property()],b.prototype,"timeInfo",void 0);e([d.property()],b.prototype,"title",void 0);e([d.reader("service","title",["name"]),d.reader("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],b.prototype,"readTitle",null);e([d.reader("web-map","title",["layerDefinition.name","title"])],b.prototype,"readTitleFromWebMap",null);e([d.property({type:String})],b.prototype,"sublayerTitleMode",
void 0);e([d.property({type:String,json:{read:{source:"timeInfo.trackIdField"}}})],b.prototype,"trackIdField",void 0);e([d.property({json:{read:!1}})],b.prototype,"type",void 0);e([d.property({type:String,readOnly:!0})],b.prototype,"typeIdField",void 0);e([d.reader("service","typeIdField"),d.reader("typeIdField",["layerDefinition.typeIdField"])],b.prototype,"readTypeIdField",null);e([d.property({type:[F]})],b.prototype,"types",void 0);e([d.reader("service","types",["types"]),d.reader("types",["layerDefinition.types"])],
b.prototype,"readTypes",null);e([d.property({type:n.ofType(D.FeatureIndex),readOnly:!0})],b.prototype,"indexes",void 0);e([d.property(m.url)],b.prototype,"url",null);e([d.writer("url")],b.prototype,"writeUrl",null);e([d.property({readOnly:!0})],b.prototype,"userIsAdmin",void 0);e([d.property({json:{origins:{service:{read:!0}},read:!1}})],b.prototype,"version",void 0);e([d.reader("service","version","currentVersion capabilities drawingInfo hasAttachments htmlPopupType relationships timeInfo typeIdField types".split(" "))],
b.prototype,"readVersion",null);e([d.property({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],b.prototype,"visible",void 0);e([d.reader("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],b.prototype,"readVisible",null);return b=e([d.subclass("esri.layers.FeatureLayer")],b)}(d.declared(W,Z,aa,ca,ba,Y,T,da))});