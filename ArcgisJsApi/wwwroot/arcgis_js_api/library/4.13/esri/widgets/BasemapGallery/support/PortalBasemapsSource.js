// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.13/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/declareExtendsHelper ../../../core/tsSupport/decorateHelper ../../../core/tsSupport/generatorHelper ../../../core/tsSupport/awaiterHelper @dojo/framework/shim/AbortController ../../../Basemap ../../../core/Collection ../../../core/Error ../../../core/Handles ../../../core/Loadable ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators ../../../portal/Portal ./LocalBasemapsSource".split(" "),
function(B,C,k,c,l,m,n,p,q,r,t,u,v,w,x,y,d,f,z){var g=q.ofType(p),A=v.getLogger("esri.widgets.BasemapGallery.support.PortalBasemapsSource");return function(h){function b(a){a=h.call(this)||this;a._handles=new t;a.basemaps=new g;a.filterFunction=null;a.portal=f.getDefault();a.query=null;a.updateBasemapsCallback=null;return a}k(b,h);b.prototype.initialize=function(){var a=this;this._handles.add([y.init(this,"filterFunction loadStatus portal.basemapGalleryGroupQuery portal.user query updateBasemapsCallback".split(" "),
function(){return a.refresh()})])};b.prototype.destroy=function(){this._handles.destroy();this.portal=this.filterFunction=this._handles=null};Object.defineProperty(b.prototype,"state",{get:function(){return"not-loaded"===this.loadStatus?"not-loaded":"loading"===this.loadStatus||this._lastPortalBasemapFetchController?"loading":"ready"},enumerable:!0,configurable:!0});b.prototype.load=function(a){this.addResolvingPromise(this.portal.load(a));this.notifyChange("state");return this.when()};b.prototype.refresh=
function(){return m(this,void 0,void 0,function(){var a,b,d,c;return l(this,function(e){switch(e.label){case 0:if("ready"!==this.state)return[2];this._lastPortalBasemapFetchController&&(this._lastPortalBasemapFetchController.abort(),this._lastPortalBasemapFetchController=null);a=this.portal;this._lastPortalBasemapFetchController=b=new n.default;this.notifyChange("state");e.label=1;case 1:return e.trys.push([1,3,,4]),[4,a.fetchBasemaps(this._toQueryString(this.query),b)];case 2:return d=e.sent(),this._updateBasemaps(d),
[3,4];case 3:c=e.sent();if(x.isAbortError(c))throw c;A.warn(new r("basemap-source:fetch-basemaps-error","Could not fetch basemaps from portal.",{error:c}));this._updateBasemaps();return[3,4];case 4:return this._lastPortalBasemapFetchController=null,this.notifyChange("state"),[2]}})})};b.prototype._toQueryString=function(a){return a&&"string"!==typeof a?Object.keys(a).map(function(b){return b+":"+a[b]}).join(" AND "):a};b.prototype._updateBasemaps=function(a){void 0===a&&(a=[]);a=this.filterFunction?
a.filter(this.filterFunction):a;a=this.updateBasemapsCallback?this.updateBasemapsCallback(a):a;this.basemaps.removeAll();this.basemaps.addMany(a)};c([d.property({readOnly:!0,type:g})],b.prototype,"basemaps",void 0);c([d.property()],b.prototype,"filterFunction",void 0);c([d.property({type:f})],b.prototype,"portal",void 0);c([d.property()],b.prototype,"query",void 0);c([d.property({dependsOn:["loadStatus"],readOnly:!0})],b.prototype,"state",null);c([d.property()],b.prototype,"updateBasemapsCallback",
void 0);return b=c([d.subclass("esri.widgets.BasemapGallery.support.PortalBasemapsSource")],b)}(d.declared(u.LoadableMixin(w.EsriPromiseMixin(z))))});