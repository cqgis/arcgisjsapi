// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.13/esri/copyright.txt for details.
//>>built
define("require exports ../../core/tsSupport/assignHelper ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/tsSupport/generatorHelper ../../core/tsSupport/awaiterHelper ../../geometry ../../Graphic ../../rasterRenderers ../../request ../../core/Error ../../core/jsonMap ../../core/lang ../../core/Logger ../../core/maybe ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators ../../core/accessorSupport/ensureType ../support/commonProperties ../support/DimensionalDefinition ../support/ExportImageServiceParameters ../support/Field ../support/FieldsIndex ../support/imageryRendererUtils ../support/MosaicRule ../support/PixelBlock ../support/RasterFunction ../support/RasterInfo ../support/RasterJobHandler ../support/rasterFormats/RasterCodec ../../renderers/support/RasterSymbolizer ../../tasks/ImageServiceIdentifyTask ../../tasks/QueryTask ../../tasks/support/FeatureSet ../../tasks/support/ImageServiceIdentifyParameters ../../tasks/support/Query".split(" "),
function(ra,Q,n,aa,d,F,z,v,ba,R,k,A,u,S,ca,B,w,da,c,ea,T,fa,ga,x,ha,G,C,ia,E,H,ja,N,ka,la,ma,U,na,oa){function pa(c){return c?JSON.stringify(c).match(/"rasterFunction":"(.*?")/gi).map(function(c){return c.replace('"rasterFunction":"',"").replace('"',"")}).join("/"):null}Object.defineProperty(Q,"__esModule",{value:!0});var qa=ca.getLogger("esri.layers.mixins.ArcGISImageService"),V=u.strict()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),
W=u.strict()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),X=u.strict()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"});Q.ArcGISImageService=function(u){return function(u){function b(){var a=null!==u&&u.apply(this,arguments)||this;a._functionRasterInfos={};a._rasterJobHandler={instance:null,refCount:0,connectionPromise:null};a._symbolizer=null;a._defaultServiceMosaicRule=null;a.rasterAttributeTableFieldPrefix=
"Raster.";a.adjustAspectRatio=null;a.bandCount=null;a.bandIds=void 0;a.capabilities=null;a.compressionQuality=void 0;a.compressionTolerance=.01;a.copyright=null;a.definitionExpression=null;a.exportImageServiceParameters=null;a.rasterInfo=null;a.fields=null;a.fullExtent=null;a.hasMultidimensions=!1;a.imageMaxHeight=4100;a.imageMaxWidth=4100;a.interpolation=void 0;a.multidimensionalInfo=null;a.noData=null;a.noDataInterpretation=void 0;a.objectIdField=null;a.pixelSizeX=null;a.pixelSizeY=null;a.pixelFilter=
null;a.raster=void 0;a.viewId=void 0;a.renderer=null;a.rasterAttributeTable=null;a.rasterFunctionInfos=null;a.serviceDataType=null;a.spatialReference=null;a.pixelType=null;a.serviceRasterInfo=null;a.sourceJSON=null;a.url=null;a.version=null;return a}aa(b,u);b.prototype.initialize=function(){this._set("exportImageServiceParameters",new ga.ExportImageServiceParameters({layer:this}))};b.prototype.readDefaultServiceMosaicRule=function(a,e){return C.fromJSON(e)};Object.defineProperty(b.prototype,"rasterFunctionNamesIndex",
{get:function(){var a=new Map;if(!this.rasterFunctionInfos||1>this.rasterFunctionInfos.length)return a;this.rasterFunctionInfos.forEach(function(e){a.set(e.name.toLowerCase().replace(/ /gi,"_"),e.name)});return a},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"queryTask",{get:function(){return new ma({url:this.url})},enumerable:!0,configurable:!0});b.prototype.readCapabilities=function(a,e,b){return a&&a.split(",").map(function(a){return a.trim()})};b.prototype.writeCompressionQuality=
function(a,e,b){null!=a&&"lerc"!==this.format&&(e[b]=a)};b.prototype.writeCompressionTolerance=function(a,e,b){"lerc"===this.format&&null!=a&&(e[b]=a)};Object.defineProperty(b.prototype,"fieldsIndex",{get:function(){return this.fields?new ha(this.fields):null},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"format",{get:function(){return this._get("format")||(null!=this.pixelFilter?"lerc":"jpgpng")},set:function(a){a&&-1<"png png8 png24 png32 jpg bmp jpgpng lerc tiff".split(" ").indexOf(a.toLowerCase())&&
this._set("format",a.toLowerCase())},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"mosaicRule",{set:function(a){a&&a.mosaicMethod&&(a=C.fromJSON(n({},a.toJSON(),{mosaicMethod:a.mosaicMethod,mosaicOperation:a.mosaicOperation})));this._set("mosaicRule",a)},enumerable:!0,configurable:!0});b.prototype.readMosaicRule=function(a,e){return C.fromJSON(a||e.mosaicRule||e)};b.prototype.writeMosaicRule=function(a,e,b,f){a=this.mosaicRule;f=this.definitionExpression;a?f&&f!==a.where&&(a=
a.clone(),a.where=f):f&&(a=new C({where:f}));this._isValidCustomizedMosaicRule(a)&&(e[b]=a.toJSON())};b.prototype.writeNoData=function(a,e,b){null!=a&&"number"===typeof a&&(e[b]=a)};b.prototype.readObjectIdField=function(a,e){a||(a=(a=e.fields.filter(function(a){return"esriFieldTypeOID"===a.type||"oid"===a.type}))&&a[0]&&a[0].name);return a};Object.defineProperty(b.prototype,"parsedUrl",{get:function(){return this.url?da.urlToObject(this.url):null},enumerable:!0,configurable:!0});b.prototype.readRenderer=
function(a,e,b){a=R.read(e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,b)||void 0;if(null!=a)return G.isSupportedRendererType(a)||qa.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),a};Object.defineProperty(b.prototype,"rasterFields",{get:function(){var a=this.rasterAttributeTableFieldPrefix||"Raster.",e=new x({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),b=new x({name:"Raster.ServicePixelValue",
alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),f=new x({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),p=this.fields?S.clone(this.fields):[];p.push(b);this.capabilities&&this.capabilities.some(function(a){return"catalog"===a.toLowerCase()})&&this.fields&&0<this.fields.length&&p.push(e);10.4<=this.version&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(function(a){return"none"===a.name.toLowerCase()})&&
p.push(f);this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(function(a){return"none"!==a.name.toLowerCase()}).forEach(function(a){p.push(new x({name:"Raster.ServicePixelValue."+a.name,alias:a.name,domain:null,editable:!1,length:50,type:"string"}))});null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(p.push(new x({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),
p.push(new x({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));(e=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null)&&0<e.length&&(e=e.filter(function(a){return"esriFieldTypeOID"!==a.type&&"value"!==a.name.toLowerCase()}).map(function(e){var b=S.clone(e);b.name=a+e.name;return b}),p=p.concat(e));return p},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"renderingRule",{set:function(a){a&&a.rasterFunction&&(a=E.fromJSON(n({},
a.toJSON(),{rasterFunction:a.rasterFunction,rasterFunctionArguments:a.rasterFunctionArguments})));this._set("renderingRule",a)},enumerable:!0,configurable:!0});b.prototype.readRenderingRule=function(a,e){a=e.rasterFunctionInfos;return e.renderingRule||a&&a.length&&"None"!==a[0].name?E.fromJSON(e.renderingRule||{rasterFunctionInfos:e.rasterFunctionInfos}):null};b.prototype.writeRenderingRule=function(a,e,b){this._isRFTJson(a)||(e[b]=a.toJSON())};b.prototype.readSpatialReference=function(a,e){return(a=
a||e.extent.spatialReference)?v.SpatialReference.fromJSON(a):null};b.prototype.readPixelType=function(a,e){return X.fromJSON(a)||a};b.prototype.writePixelType=function(a,e,b){if(B.isNone(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)e[b]=X.toJSON(a)};b.prototype.readVersion=function(a,e){(a=e.currentVersion)||(a=e.hasOwnProperty("fields")||e.hasOwnProperty("timeInfo")?10:9.3);return a};b.prototype.applyFilter=function(a){var e=a;this.pixelFilter&&(e=this._clonePixelData(a),
this.pixelFilter(e));return e};b.prototype.applyRenderer=function(a,e){return z(this,void 0,void 0,function(){var b,f,p,c;return F(this,function(h){switch(h.label){case 0:b=a;if(this._isPicture()||!this.renderer||!this._symbolizer||this.pixelFilter)return[3,5];f=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON());p=this._rasterJobHandler.instance;if(!p)return[3,4];if(!f)return[3,2];this._cachedRendererJson=this.renderer.toJSON();this._symbolizer.bind();return[4,p.updateSymbolizer(this._symbolizer,
e)];case 1:h.sent(),h.label=2;case 2:return[4,p.symbolize(a.pixelBlock,e)];case 3:return c=h.sent(),b={extent:a.extent,pixelBlock:c},[3,5];case 4:b={extent:a.extent,pixelBlock:this._symbolizer.symbolize(a.pixelBlock)},h.label=5;case 5:return[2,b]}})})};b.prototype.destroy=function(){this._shutdownJobHandler()};b.prototype.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++};b.prototype.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--;0>=this._rasterJobHandler.refCount&&
this._shutdownJobHandler()};b.prototype.fetchImage=function(a,e,b,f){var h=this;void 0===f&&(f={});if(null==a||null==e||null==b)return w.reject(new A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));var c=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:f.signal}):null;return w.when(c).then(function(c){c&&(h.rasterInfo=c);c={imageServiceParameters:h.getExportImageServiceParameters(a,
e,b,f.timeExtent),imageProps:{extent:a,width:e,height:b,format:h.format},requestAsImageElement:f.requestAsImageElement&&!h.pixelFilter||!1,signal:f.signal};return h._requestArrayBuffer(c)})};b.prototype.fetchKeyProperties=function(a){a=a&&a.renderingRule&&a.renderingRule.toJSON();return k(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(function(a){return a.data})};b.prototype.fetchRasterAttributeTable=function(a){a=
a&&a.renderingRule&&a.renderingRule.toJSON();return 10.1>this.version?w.reject(new A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):k(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.3<=this.version&&a?JSON.stringify(a):null})}).then(function(a){return U.fromJSON(a.data)})};b.prototype.getCatalogItemRasterInfo=function(a,b){return z(this,void 0,void 0,function(){var e,f,c,d,l;return F(this,function(h){switch(h.label){case 0:return e=
k(this.parsedUrl.path+"/"+a+"/info",n({query:this._getQueryParams(),responseType:"json"},b)).then(function(a){return a.data}),f=k(this.parsedUrl.path+"/"+a+"/info/keyProperties",n({query:this._getQueryParams(),responseType:"json"},b)).then(function(a){return a.data}).catch(function(a){}),[4,w.all([e,f])];case 1:c=h.sent();if(!c[0])return[2,void 0];d=v.Extent.fromJSON(c[0].extent);l=c[0].statistics?c[0].statistics.map(function(a){return{min:a[0],max:a[1],avg:a[2],stddev:a[3]}}):null;return[2,new H({bandCount:c[0].bandCount,
extent:d,spatialReference:d.sr,pixelSize:new v.Point({x:c[0].pixelSizeX,y:c[0].pixelSizeY,spatialReference:d.sr}),pixelType:c[0].pixelType.toLowerCase(),statistics:l,histograms:c[0].histograms,keyProperties:c[1]})]}})})};b.prototype.getCatalogItemICSInfo=function(a,b){return z(this,void 0,void 0,function(){var e,f,c,d,l,g,r,m,Y,q,u,z,t,Z,A,I,x,O,B,y,M,K,P,C,E,D,J,G,H;return F(this,function(h){switch(h.label){case 0:return[4,k(this.parsedUrl.path+"/"+a+"/info/ics",n({query:this._getQueryParams(),responseType:"json"},
b))];case 1:f=(e=h.sent().data)&&e.ics;if(!f)return[2,void 0];c=10.7<=this.version?k(this.parsedUrl.path+"/"+a+"/info/icstopixel",n({query:this._getQueryParams(),responseType:"json"},b)).then(function(a){return a.data}).catch(function(a){return{}}):{};d=f.extent.spatialReference;if(!d)for(l in f.geodataXform)f.geodataXform[l].spatialReference&&(d=f.geodataXform[l].spatialReference);g={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[f.extent]}),inSR:d.wkid||d,outSR:"0:"+
a};r=k(this.parsedUrl.path+"/project",n({query:this._getQueryParams(g),responseType:"json"},b)).then(function(a){return a.data});m=5;Y=(f.extent.xmin+f.extent.xmax)/2;q=(f.extent.ymax-f.extent.ymin)/(m+1);u=f.extent.ymin+q;z=[];for(t=0;t<m;t++)z.push({x:Y,y:u+q*t});Z={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:z}),inSR:d.wkid||d,outSR:"0:"+a};A=k(this.parsedUrl.path+"/project",n({query:this._getQueryParams(Z),responseType:"json"},b)).then(function(a){return a.data});return[4,
w.all([c,r,A])];case 2:I=h.sent();x=I[0].ipxf;null==x&&(O=f.geodataXform&&f.geodataXform.xf_0)&&"topup"===O.name.toLowerCase()&&(x={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:O.coefficients,cellsizeRatio:0,type:"GeometricXform"}});if(B=v.Extent.fromJSON(I[1]&&I[1].geometries&&I[1].geometries[0]))B.spatialReference=new v.SpatialReference({wkid:0,imageCoordinateSystem:f});y=I[2].geometries.filter(function(a){return null!=a});M=y.length;for(t=E=C=P=K=0;t<M;t++)K+=
y[t].x,P+=y[t].y,C+=y[t].x*y[t].x,E+=y[t].x*y[t].y;D=(M*E-K*P)/(M*C-K*K);J=0;G=y[m-1].x>y[0].x;H=y[m-1].y>y[0].y;Infinity===D?J=H?90:270:0===D?J=G?0:180:0<D?J=G?180*Math.atan(D)/Math.PI:180*Math.atan(D)/Math.PI+180:0>D&&(J=H?180+180*Math.atan(D)/Math.PI:360+180*Math.atan(D)/Math.PI);return[2,{ics:f,icsToPixelTransform:x,icsExtent:B,northDirection:J}]}})})};b.prototype.generateRasterInfo=function(a,b){return z(this,void 0,void 0,function(){var e,f;return F(this,function(c){switch(c.label){case 0:if((!a||
"none"===a.functionName.toLowerCase())&&B.isSome(this.serviceRasterInfo))return[2,this.serviceRasterInfo];e=pa(a);if(this._functionRasterInfos[e])return[2,this._functionRasterInfos[e]];f=this._generateRasterInfo(a,b);this._functionRasterInfos[e]=f;c.label=1;case 1:return c.trys.push([1,3,,4]),[4,f];case 2:return[2,c.sent()];case 3:return c.sent(),this._functionRasterInfos[e]=null,[2,null];case 4:return[2]}})})};b.prototype.getExportImageServiceParameters=function(a,b,c,f){a=a.clone().shiftCentralMeridian();
var e=a.spatialReference;if(e.imageCoordinateSystem)var h=e.imageCoordinateSystem,d=h.id,h=h.referenceServiceName,e=null!=d?h?-1<this.parsedUrl.path.toLowerCase().indexOf("/"+h.toLowerCase()+"/")?"0:"+d:JSON.stringify({icsid:d,icsns:h}):"0:"+d:JSON.stringify({ics:e.imageCoordinateSystem});else e=e.wkid||JSON.stringify(e.toJSON());B.isSome(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);var d=this.exportImageServiceParameters.toJSON(),
h=d.bandIds,g=d.noData,r=d.mosaicRule,m=d.renderingRule;h instanceof Array&&0<h.length&&(d.bandIds=h.join(","));g instanceof Array&&0<g.length&&(d.noData=g.join(","));var k=this.timeInfo;r&&r.multidimensionalDefinition&&f&&k&&k.startField&&(r.multidimensionalDefinition=r.multidimensionalDefinition.filter(function(a){return a.dimensionName!==k.startField}));d.mosaicRule=r&&JSON.stringify(r);d.renderingRule=m&&JSON.stringify(m);h={};if(f)if(g=f.toJSON(),f=g.start,g=g.end,f&&g&&f===g)h.time=""+f;else if(null!=
f||null!=g)h.time=(null==f?"null":f)+","+(null==g?"null":g);return n({bbox:a.xmin+","+a.ymin+","+a.xmax+","+a.ymax,bboxSR:e,imageSR:e,size:b+","+c},d,h)};b.prototype.queryRasters=function(a){return this.queryTask.execute(a)};b.prototype.queryVisibleRasters=function(a,b){var e=this;if(!a)return w.reject(new A("imagery-layer: query-visible-rasters","missing query parameter"));var f=b||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};b=f.pixelSize;var c=f.returnDomainValues,
d=f.returnTopmostRaster,l=f.showNoDataRecords,g=!1,r=f=null,m=this.rasterFunctionNamesIndex;if(a.outFields&&10.4<=this.version){var k=a.outFields.filter(function(a){return-1<a.toLowerCase().indexOf("raster.servicepixelvalue")&&24<a.length}).map(function(a){a=a.slice(25);return[e._updateRenderingRulesFunctionName(a,m),a]}),f=k.map(function(a){return new E({functionName:a[0]})}),r=k.map(function(a){return a[1]}),g=a.outFields.some(function(a){return-1===a.toLowerCase().indexOf("raster.servicepixelvalue")});
0===f.length&&(f=null)}var q=!a.outSpatialReference||a.outSpatialReference.equals(this.spatialReference);b=this._getQueryParams({geometry:a.geometry,timeExtent:a.timeExtent,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,renderingRules:f,pixelSize:b,returnCatalogItems:g,returnGeometry:q,maxItemCount:d?1:null});delete b.f;var n=new na(b),u=new la({url:this.url}),t=this.generateRasterInfo(this.renderingRule);return w.create(function(b,f){t.then(function(){u.execute(n).then(function(f){var h=
a.outFields;if(g&&!q&&f.catalogItems&&f.catalogItems.features&&0<f.catalogItems.features.length){var d=e.objectIdField||"ObjectId",p=f.catalogItems.features,m=p.map(function(a){return a.attributes&&a.attributes[d]}),m=new oa({objectIds:m,returnGeometry:!0,outSpatialReference:a.outSpatialReference,outFields:[d]});return e.queryRasters(m).then(function(g){g&&g.features&&0<g.features.length&&g.features.forEach(function(b){p.forEach(function(e){e.attributes[d]===b.attributes[d]&&(e.geometry=new v.Polygon(b.geometry),
e.geometry.spatialReference=a.outSpatialReference)})});b(e._processVisibleRastersResponse(f,{returnDomainValues:c,templateRRFunctionNames:r,showNoDataRecords:l,templateFields:h}))}).catch(function(){throw new A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry");})}b(e._processVisibleRastersResponse(f,{returnDomainValues:c,templateRRFunctionNames:r,showNoDataRecords:l,templateFields:h}))}).catch(function(){throw new A("imagery-layer:query-visible-rasters",
"encountered error when querying visible rasters");})})})};b.prototype._fetchService=function(a){return z(this,void 0,void 0,function(){var b,c,f,d,L,l,g=this;return F(this,function(e){switch(e.label){case 0:return(b=this.sourceJSON)?[3,2]:[4,k(this.parsedUrl.path,{query:this._getQueryParams(),responseType:"json",signal:a})];case 1:c=e.sent(),f=c.data,d=c.ssl,this.sourceJSON=b=f,d&&(this.url=this.url.replace(/^http:/i,"https:")),e.label=2;case 2:return this.read(b,{origin:"service",url:this.parsedUrl}),
B.isSome(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo),L=B.isSome(this.serviceRasterInfo)?w.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:b,signal:a}).then(function(a){g._set("serviceRasterInfo",a);return a}),l=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:a}):null,[2,w.all([L,l]).then(function(a){a[1]?g._set("rasterInfo",a[1]):g._set("rasterInfo",a[0]);
g._configDefaultRenderer();g.watch("renderer",function(a){return g._configDefaultRenderer()});g.watch("renderingRule",function(a){(g.renderer||g._symbolizer||g.popupEnabled&&g.popupTemplate)&&g.generateRasterInfo(a).then(function(a){a&&(g.rasterInfo=a)})});(a=B.isSome(g.serviceRasterInfo)&&g.serviceRasterInfo.multidimensionalInfo)&&g._updateMultidimensionalDefinition(a)})]}})})};b.prototype._initJobHandler=function(){return z(this,void 0,void 0,function(){var a,b=this;return F(this,function(e){switch(e.label){case 0:if(null!=
this._rasterJobHandler.connectionPromise)return[2,this._rasterJobHandler.connectionPromise];a=new ja;this._rasterJobHandler.connectionPromise=a.initialize().then(function(){b._rasterJobHandler.instance=a},function(){return null});return[4,this._rasterJobHandler.connectionPromise];case 1:return e.sent(),[2]}})})};b.prototype._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy();this._rasterJobHandler.instance=null;this._rasterJobHandler.connectionPromise=
null;this._rasterJobHandler.refCount=0};b.prototype._isPicture=function(){return!this.format||-1<this.format.indexOf("jpg")||-1<this.format.indexOf("png")};b.prototype._configDefaultRenderer=function(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&3<=this.rasterInfo.bandCount){var a=G.getDefaultBandCombination(this.rasterInfo);!a||3===this.rasterInfo.bandCount&&0===a[0]&&1===a[1]&&2===a[2]||(this.bandIds=a)}this.renderer||(this.renderer=G.createDefaultRenderer(this.rasterInfo,this.bandIds));
this._symbolizer?(this._symbolizer.renderer=this.renderer,this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new ka({renderer:this.renderer,rasterInfo:this.rasterInfo});this._symbolizer.bind()||(this._symbolizer=null)}};b.prototype._clonePixelData=function(a){return null==a?a:{extent:a.extent&&a.extent.clone(),pixelBlock:a.pixelBlock&&a.pixelBlock.clone()}};b.prototype._getQueryParams=function(a){return n({raster:this.raster,viewId:this.viewId,f:"json"},a)};b.prototype._decodePixelBlock=
function(a,b,c){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:a,options:b}):N.decode(a,b,c)};b.prototype._fetchAuxiliaryRasterInfo=function(a){var b=a&&a.serviceInfo;if(!b)return w.reject(new A("imagery-layer:fetch-metadata","valid serviceInfo is required"));var c=a.renderingRule?JSON.stringify(a.renderingRule.toJSON()):null,f=a.signal;a=b.hasRasterAttributeTable&&10.1<=this.version?k(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:10.1<=
this.version?c:null}),signal:f}).then(function(a){return U.fromJSON(a.data)}).catch(function(a){return null}):!1;var d=b.hasColormap&&10.1<=this.version?k(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:10.6<=this.version?c:null}),signal:f}).then(function(a){return a.data&&a.data.colormap}):!1,L=b.hasHistograms&&10.1<=this.version?k(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:10.1<=this.version?c:null}),signal:f}).then(function(a){return a.data&&
a.data.histograms}):!1,c=10.3<=this.version?k(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:c}),signal:f}).then(function(a){return a.data}).catch(function(a){}):!1,f=b.hasMultidimensions&&10.3<=this.version?k(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:f}).then(function(a){return a.data&&a.data.multidimensionalInfo}):!1;return w.all([a,d,L,c,f]).then(function(a){var e=null;if(b.minValues&&b.minValues.length===b.bandCount)for(var e=
[],c=0;c<b.minValues.length;c++)e.push({min:b.minValues[c],max:b.maxValues[c],avg:b.meanValues[c],stddev:b.stdvValues[c]});c=v.SpatialReference.fromJSON(b.spatialReference||b.extent.spatialReference);return new H({bandCount:b.bandCount,extent:v.Extent.fromJSON(b.extent),spatialReference:c,pixelSize:new v.Point({x:b.pixelSizeX,y:b.pixelSizeY,spatialReference:c}),pixelType:b.pixelType.toLowerCase(),statistics:e,attributeTable:a[0]||null,colormap:a[1]||null,histograms:a[2]||null,keyProperties:a[3]||
null,multidimensionalInfo:a[4]||null})})};b.prototype._requestArrayBuffer=function(a){var b=this,c=a.imageProps,f=a.signal;if(a.requestAsImageElement&&!this.pixelFilter&&c.format&&-1<c.format.indexOf("png"))return k(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(n({f:"image"},a.imageServiceParameters)),signal:f}).then(function(a){return{imageElement:a.data,params:c}});var d=this._initJobHandler();a=k(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",
query:this._getQueryParams(n({f:"image"},a.imageServiceParameters)),signal:f});return w.all([a,d]).then(function(a){a=a[0].data;var e=c.format||"jpgpng",d=e;"bsq"!==d&&"bip"!==d&&(d=N.getFormat(a));if(!d)throw new A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(a)));var d=-1<e.indexOf("png")&&("png"===d||"jpg"===d),h={signal:f};return d?N.decode(a,n({useCanvas:!0},c),h).then(function(a){return{pixelData:{pixelBlock:a,extent:c.extent},params:c}}):
b._decodePixelBlock(a,{width:c.width,height:c.height,planes:null,pixelType:null,noDataValue:null,format:e},h).then(function(a){return{pixelData:{pixelBlock:a,extent:c.extent},params:c}})})};b.prototype._generateRasterInfo=function(a,b){return z(this,void 0,void 0,function(){var c,e;return F(this,function(f){switch(f.label){case 0:return[4,k(this.parsedUrl.path,n({query:this._getQueryParams({renderingRule:a}),responseType:"json"},b))];case 1:return c=f.sent().data,[4,this._fetchAuxiliaryRasterInfo(n({serviceInfo:c,
renderingRule:a},b))];case 2:return e=f.sent(),[2,e]}})})};b.prototype._isValidCustomizedMosaicRule=function(a){return a&&JSON.stringify(a.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())};b.prototype._updateMultidimensionalDefinition=function(a){if(!this._isValidCustomizedMosaicRule(this.mosaicRule)){var b=a.variables[0].dimensions;a=[];for(var c in b)if(b.hasOwnProperty(c)){var f=b[c],d=f.extent,k=!0,l=[d[0]];f.hasRanges&&!0===f.hasRanges?(k=!1,
l=[f.values[0]]):"stdz"===f.name.toLowerCase()&&Math.abs(d[1])<=Math.abs(d[0])&&(l=[d[1]]);a.push(new fa({variableName:"",dimensionName:b[c].name,isSlice:k,values:l}))}0<a.length&&(this.mosaicRule=this.mosaicRule||new C,c=this.mosaicRule.multidimensionalDefinition,!c||c&&0>=c.length)&&(this.mosaicRule.multidimensionalDefinition=a)}};b.prototype._processVisibleRastersResponse=function(a,b){b=b||{};var c=a.value,e=b.templateRRFunctionNames,d=b.showNoDataRecords,k=b.returnDomainValues,l=b.templateFields;
b=a.processedValues;var g=a.catalogItems&&a.catalogItems.features,r=a.properties&&a.properties.Values&&a.properties.Values.map(function(a){return a.replace(/ /gi,", ")})||[],m=this.objectIdField||"ObjectId";a=-1<c.toLowerCase().indexOf("nodata");var n=[];!c||g||a||(g={},g[m]=0,g=new ba(this.fullExtent,null,g),r=[c],g=[g]);if(!g)return[];this._updateResponseFieldNames(g,l);for(var q,m=0;m<g.length;m++){l=g[m];if(null!=c&&!a){q=r[m];if("nodata"===q.toLowerCase()&&!d)continue;l.attributes["Raster.ItemPixelValue"]=
q;l.attributes["Raster.ServicePixelValue"]=c;this._updateFeatureWithMagDirValues(l,q);this._updateFeatureWithRasterAttributeTableValues(l,this.renderingRule?c:q)}l.sourceLayer=this;k&&this._updateFeatureWithDomainValues(l);if(e&&b&&e.length===b.length)for(q=0;q<e.length;q++)l.attributes["Raster.ServicePixelValue."+e[q]]=b[q];n.push(g[m])}return n};b.prototype._updateFeatureWithRasterAttributeTableValues=function(a,b){var c=this,e=this.rasterInfo&&this.rasterInfo.attributeTable,d=e&&e.features;if(d){var e=
e.fields,k=e.map(function(a){return a.name}).filter(function(a){return"value"===a.toLowerCase()}),l=k&&k[0];if(l){var g=d.filter(function(a){return a.attributes[l]===(null!=b?parseInt(b,10):null)});g&&g[0]&&e.forEach(function(b){a.attributes[c.rasterAttributeTableFieldPrefix+b.name]=g[0].attributes[b.name]})}}};b.prototype._updateFeatureWithMagDirValues=function(a,b){if(this.pixelFilter&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType)){var c=
b.replace(" ",",").split(",").map(function(a){return parseFloat(a)});b=c.map(function(a){return[a]});c=c.map(function(a){return{minValue:a,maxValue:a,noDataValue:null}});b=new ia({height:1,width:1,pixelType:"f32",pixels:b,statistics:c});this.pixelFilter({pixelBlock:b,extent:new v.Extent(0,0,0,0,this.spatialReference)});a.attributes["Raster.Magnitude"]=b.pixels[0][0];a.attributes["Raster.Direction"]=b.pixels[1][0]}};b.prototype._updateFeatureWithDomainValues=function(a){var b=this.fields&&this.fields.filter(function(a){return a.domain&&
"coded-value"===a.domain.type});null!=b&&b.forEach(function(b){var c=a.attributes[b.name];if(null!=c){var e=b.domain.codedValues.filter(function(a){return a.code===c})[0];e&&(a.attributes[b.name]=e.name)}})};b.prototype._updateResponseFieldNames=function(a,b){if(b&&!(1>b.length)){var c=this.fieldsIndex;c&&a.forEach(function(a){if(a&&a.attributes)for(var e=0;e<b.length;e++){var d=b[e];if(c.has(d)){var f=c.get(d).name;f!==d&&(a.attributes[d]=a.attributes[f],delete a.attributes[f])}}})}};b.prototype._updateRenderingRulesFunctionName=
function(a,b){if(a&&!(1>a.length)){if("Raw"===a)return a.replace("Raw","None");var c=a.toLowerCase().replace(/ /gi,"_");return b.has(c)?b.get(c):a}};b.prototype._isRFTJson=function(a){return a.name&&a.arguments&&a.function&&a.hasOwnProperty("functionType")};d([c.property()],b.prototype,"_functionRasterInfos",void 0);d([c.property()],b.prototype,"_rasterJobHandler",void 0);d([c.property()],b.prototype,"_symbolizer",void 0);d([c.property()],b.prototype,"_defaultServiceMosaicRule",void 0);d([c.reader("_defaultServiceMosaicRule",
["defaultMosaicMethod"])],b.prototype,"readDefaultServiceMosaicRule",null);d([c.property()],b.prototype,"_cachedRendererJson",void 0);d([c.property()],b.prototype,"rasterAttributeTableFieldPrefix",void 0);d([c.property({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],b.prototype,"rasterFunctionNamesIndex",null);d([c.property({readOnly:!0,dependsOn:["url"]})],b.prototype,"queryTask",null);d([c.property()],b.prototype,"adjustAspectRatio",void 0);d([c.property({readOnly:!0}),c.aliasOf("serviceRasterInfo.bandCount")],
b.prototype,"bandCount",void 0);d([c.property({type:[ea.Integer],json:{write:!0}})],b.prototype,"bandIds",void 0);d([c.property({readOnly:!0})],b.prototype,"capabilities",void 0);d([c.reader("capabilities")],b.prototype,"readCapabilities",null);d([c.property({type:Number})],b.prototype,"compressionQuality",void 0);d([c.writer("compressionQuality")],b.prototype,"writeCompressionQuality",null);d([c.property({type:Number})],b.prototype,"compressionTolerance",void 0);d([c.writer("compressionTolerance")],
b.prototype,"writeCompressionTolerance",null);d([c.property({json:{read:{source:"copyrightText"}}})],b.prototype,"copyright",void 0);d([c.property({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],b.prototype,"definitionExpression",void 0);d([c.property({readOnly:!0,constructOnly:!0})],b.prototype,"exportImageServiceParameters",void 0);d([c.property()],b.prototype,"rasterInfo",void 0);d([c.property({readOnly:!0,type:[x]})],
b.prototype,"fields",void 0);d([c.property({readOnly:!0,dependsOn:["fields"]})],b.prototype,"fieldsIndex",null);d([c.property({type:String,json:{write:!0}})],b.prototype,"format",null);d([c.property({type:v.Extent})],b.prototype,"fullExtent",void 0);d([c.property({readOnly:!0})],b.prototype,"hasMultidimensions",void 0);d([c.property({json:{read:{source:"maxImageHeight"}}})],b.prototype,"imageMaxHeight",void 0);d([c.property({json:{read:{source:"maxImageWidth"}}})],b.prototype,"imageMaxWidth",void 0);
d([c.property({type:String,json:{read:{reader:V.read},write:{writer:V.write}}})],b.prototype,"interpolation",void 0);d([c.property({type:C})],b.prototype,"mosaicRule",null);d([c.reader("mosaicRule",["mosaicRule","defaultMosaicMethod"])],b.prototype,"readMosaicRule",null);d([c.writer("mosaicRule")],b.prototype,"writeMosaicRule",null);d([c.property({readOnly:!0}),c.aliasOf("serviceRasterInfo.multidimensionalInfo")],b.prototype,"multidimensionalInfo",void 0);d([c.property()],b.prototype,"noData",void 0);
d([c.writer("noData")],b.prototype,"writeNoData",null);d([c.property({type:String,json:{read:{reader:W.read},write:{writer:W.write}}})],b.prototype,"noDataInterpretation",void 0);d([c.property({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],b.prototype,"objectIdField",void 0);d([c.reader("objectIdField")],b.prototype,"readObjectIdField",null);d([c.property({readOnly:!0,dependsOn:["url"]})],b.prototype,"parsedUrl",null);d([c.property({readOnly:!0}),c.aliasOf("serviceRasterInfo.pixelSize.x")],
b.prototype,"pixelSizeX",void 0);d([c.property({readOnly:!0}),c.aliasOf("serviceRasterInfo.pixelSize.y")],b.prototype,"pixelSizeY",void 0);d([c.property({type:Function})],b.prototype,"pixelFilter",void 0);d([c.property()],b.prototype,"raster",void 0);d([c.property()],b.prototype,"viewId",void 0);d([c.property({types:R.rasterRendererTypes,json:{read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer"}}})],b.prototype,"renderer",void 0);d([c.reader("renderer")],
b.prototype,"readRenderer",null);d([c.property(T.opacityDrawingInfo)],b.prototype,"opacity",void 0);d([c.property({readOnly:!0}),c.aliasOf("serviceRasterInfo.attributeTable")],b.prototype,"rasterAttributeTable",void 0);d([c.property({readOnly:!0,dependsOn:["fields","rasterInfo"]})],b.prototype,"rasterFields",null);d([c.property({readOnly:!0})],b.prototype,"rasterFunctionInfos",void 0);d([c.property({type:E})],b.prototype,"renderingRule",null);d([c.reader("renderingRule",["renderingRule","rasterFunctionInfos"])],
b.prototype,"readRenderingRule",null);d([c.writer("renderingRule")],b.prototype,"writeRenderingRule",null);d([c.property()],b.prototype,"serviceDataType",void 0);d([c.property({readOnly:!0,type:v.SpatialReference})],b.prototype,"spatialReference",void 0);d([c.reader("spatialReference",["spatialReference","extent"])],b.prototype,"readSpatialReference",null);d([c.property()],b.prototype,"pixelType",void 0);d([c.reader("pixelType")],b.prototype,"readPixelType",null);d([c.writer("pixelType")],b.prototype,
"writePixelType",null);d([c.property({constructOnly:!0,type:H})],b.prototype,"serviceRasterInfo",void 0);d([c.property()],b.prototype,"sourceJSON",void 0);d([c.property(T.url)],b.prototype,"url",void 0);d([c.property({readOnly:!0})],b.prototype,"version",void 0);d([c.reader("version",["currentVersion","fields","timeInfo"])],b.prototype,"readVersion",null);return b=d([c.subclass("esri.layers.mixins.ArcGISImageService")],b)}(c.declared(u))}});