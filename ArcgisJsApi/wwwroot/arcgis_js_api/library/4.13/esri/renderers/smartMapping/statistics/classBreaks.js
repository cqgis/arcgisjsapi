// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.13/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/assignHelper ../../../core/tsSupport/generatorHelper ../../../core/tsSupport/awaiterHelper ../../../core/Error ./support/utils ../support/utils".split(" "),function(A,B,y,t,e,b,u,f){function z(c){return e(this,void 0,void 0,function(){var a,k,d,l,g,h,e,m,n,p,q,v,w,x;return t(this,function(r){switch(r.label){case 0:if(!c||!c.layer||!c.field&&!c.valueExpression)throw new b("class-breaks:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");
if(c.valueExpression&&!c.view)throw new b("class-breaks:missing-parameters","View is required when 'valueExpression' is specified");a=y({},c);a.normalizationType=f.getNormalizationType(a);a.numClasses=a.numClasses||5;k=[0,2,1,3];d=f.createLayerAdapter(a.layer,k);a.layer=d;if(!d)throw new b("class-breaks:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(k).join(", "));return[4,d.load()];case 1:return r.sent(),l=a.field,g=a.minValue,h=a.maxValue,e=null!=g||null!=h,m=a.classificationMethod,
n="percent-of-total"===a.normalizationType,p=!1!==a.analyzeData,q=l?d.getField(l):null,[4,f.getFieldsList({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression})];case 2:v=r.sent();if(w=u.verifyBasicFieldValidity(d,v,"class-breaks:invalid-parameters"))throw w;if(q&&(x=u.verifyNumericField(d,q,"class-breaks:invalid-parameters")))throw x;if(a.valueExpression&&a.normalizationType)throw new b("class-breaks:invalid-parameters","Normalization is not allowed when 'valueExpression' is specified");
if(e)if(p){if(n&&null==a.normalizationTotal)throw new b("class-breaks:missing-parameters","'normalizationTotal' is required when 'normalizationType' is 'precent-of-total' and 'minValue', 'maxValue' are specified");}else{if(null==g||null==h)throw new b("class-breaks:missing-parameters","Both 'minValue' and 'maxValue' are required when 'analyzeData' is false");if(g>=h)throw new b("class-breaks:invalid-parameters","'minValue' should be less than 'maxValue'");if(m&&"equal-interval"!==m)throw new b("class-breaks:invalid-parameters",
"'classificationMethod' other than 'equal-interval' is not allowed when 'analyzeData' is false");if(n&&null==a.normalizationTotal)throw new b("class-breaks:missing-parameters","'normalizationTotal' is required when 'normalizationType' is 'precent-of-total' and 'analyzeData' is false");}else if(!p)throw new b("class-breaks:missing-parameters","Both 'minValue' and 'maxValue' are required when 'analyzeData' is false");return[2,a]}})})}return function(b){return e(this,void 0,void 0,function(){var a,c;
return t(this,function(d){switch(d.label){case 0:return[4,z(b)];case 1:return a=d.sent(),c=a.layer,[2,c.classBreaks(a)]}})})}});